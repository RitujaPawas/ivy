Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/full_like","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sinh","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/matmul","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/trace","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sinh","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/trace","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/full_like","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sinh","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/matmul","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/trace","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/full_like","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sinh","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/matmul","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/trace","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/full_like","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sinh","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/matmul","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/trace","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/full_like","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sinh","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/matmul","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/trace","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/full_like.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sinh.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/matmul.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/trace.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sinh.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/trace.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/full_like.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sinh.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/matmul.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/trace.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/full_like.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/matmul.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/trace.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/full_like.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sinh.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/matmul.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/trace.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/full_like.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sinh.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/matmul.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/trace.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[813,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[357,0,0,"-"],creation_functions:[358,0,0,"-"],data_type_functions:[365,0,0,"-"],data_types:[369,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[359,2,1,""],full_like:[360,2,1,""],ones:[361,2,1,""],ones_like:[362,2,1,""],tril:[363,2,1,""],zeros:[364,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[365,1,1,""],finfo:[367,2,1,""],iinfo:[368,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[365,3,1,""],bits:[365,3,1,""],eps:[365,3,1,""],max:[365,3,1,""],min:[365,3,1,""],smallest_normal:[365,3,1,""]},"ivy.functional.backends.numpy.core":{device:[413,0,0,"-"],general:[415,0,0,"-"],gradients:[447,0,0,"-"],image:[452,0,0,"-"],linear_algebra:[456,0,0,"-"],logic:[460,0,0,"-"],math:[461,0,0,"-"],random:[463,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[414,1,1,""],clear_mem_on_dev:[413,2,1,""],dev:[413,2,1,""],dev_from_str:[413,2,1,""],dev_to_str:[413,2,1,""],gpu_is_available:[413,2,1,""],num_gpus:[413,2,1,""],to_dev:[413,2,1,""],tpu_is_available:[413,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[414,3,1,""],start:[414,3,1,""],stop:[414,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[415,2,1,""],arange:[416,2,1,""],argmin:[417,2,1,""],array:[418,2,1,""],asarray:[415,2,1,""],astype:[415,2,1,""],cast:[419,2,1,""],clip:[415,2,1,""],compile:[420,2,1,""],concatenate:[421,2,1,""],constant_pad:[415,2,1,""],container_types:[415,2,1,""],copy_array:[415,2,1,""],cumprod:[422,2,1,""],current_framework_str:[415,2,1,""],dtype:[423,2,1,""],dtype_bits:[424,2,1,""],dtype_from_str:[425,2,1,""],dtype_to_str:[426,2,1,""],floor:[415,2,1,""],floormod:[415,2,1,""],full:[427,2,1,""],gather:[428,2,1,""],gather_nd:[429,2,1,""],get_num_dims:[415,2,1,""],identity:[430,2,1,""],indices_where:[431,2,1,""],inplace_arrays_supported:[415,2,1,""],inplace_decrement:[432,2,1,""],inplace_increment:[433,2,1,""],inplace_update:[434,2,1,""],inplace_variables_supported:[415,2,1,""],is_array:[435,2,1,""],linear_resample:[436,2,1,""],linspace:[437,2,1,""],logspace:[438,2,1,""],meshgrid:[415,2,1,""],multiprocessing:[415,2,1,""],one_hot:[439,2,1,""],round:[415,2,1,""],scatter_flat:[440,2,1,""],scatter_nd:[441,2,1,""],shape:[415,2,1,""],split:[442,2,1,""],squeeze:[443,2,1,""],to_list:[415,2,1,""],to_numpy:[415,2,1,""],to_scalar:[415,2,1,""],transpose:[444,2,1,""],unstack:[445,2,1,""],where:[415,2,1,""],zero_pad:[415,2,1,""],zeros_like:[446,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[448,2,1,""],is_variable:[449,2,1,""],stop_gradient:[450,2,1,""],variable:[451,2,1,""],variable_data:[447,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[453,2,1,""],gradient_image:[454,2,1,""],stack_images:[455,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[457,2,1,""],qr:[458,2,1,""],vector_to_skew_symmetric_matrix:[459,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[462,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[464,2,1,""],randint:[463,2,1,""],random_normal:[463,2,1,""],random_uniform:[463,2,1,""],seed:[463,2,1,""],shuffle:[463,2,1,""]},"ivy.functional.ivy":{array_api:[814,0,0,"-"],core:[868,0,0,"-"],nn:[1163,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[815,0,0,"-"],creation_functions:[816,0,0,"-"],data_type_functions:[823,0,0,"-"],data_types:[826,0,0,"-"],elementwise_functions:[827,0,0,"-"],function_and_method_signatures:[848,0,0,"-"],linear_algebra:[849,0,0,"-"],manipulation_functions:[856,0,0,"-"],searching_functions:[858,0,0,"-"],set_functions:[860,0,0,"-"],sorting_functions:[861,0,0,"-"],statistical_functions:[863,0,0,"-"],utility_functions:[865,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[815,4,1,""],nan:[815,4,1,""],pi:[815,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[817,2,1,""],full_like:[818,2,1,""],ones:[819,2,1,""],ones_like:[820,2,1,""],tril:[821,2,1,""],zeros:[822,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[824,2,1,""],iinfo:[825,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[828,2,1,""],asinh:[829,2,1,""],bitwise_and:[830,2,1,""],ceil:[831,2,1,""],cos:[832,2,1,""],cosh:[833,2,1,""],isfinite:[834,2,1,""],isnan:[835,2,1,""],less:[836,2,1,""],less_equal:[837,2,1,""],log10:[838,2,1,""],log1p:[839,2,1,""],log2:[840,2,1,""],logical_not:[841,2,1,""],logical_or:[842,2,1,""],negative:[843,2,1,""],sin:[844,2,1,""],sinh:[845,2,1,""],sqrt:[846,2,1,""],tanh:[847,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[850,2,1,""],matmul:[851,2,1,""],slodget:[852,2,1,""],svd:[853,2,1,""],trace:[854,2,1,""],vector_norm:[855,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[857,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[859,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[862,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[864,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[866,2,1,""],any:[867,2,1,""]},"ivy.functional.ivy.core":{compilation:[869,0,0,"-"],device:[871,0,0,"-"],dtype:[921,0,0,"-"],general:[945,0,0,"-"],gradients:[1041,0,0,"-"],image:[1057,0,0,"-"],linalg:[1064,0,0,"-"],logic:[1071,0,0,"-"],math:[1074,0,0,"-"],meta:[1087,0,0,"-"],multi_node:[1091,0,0,"-"],nest:[1135,0,0,"-"],random:[1147,0,0,"-"],reductions:[1154,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[870,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[871,1,1,""],DevClonedItem:[873,1,1,""],DevClonedIter:[874,1,1,""],DevClonedNest:[875,1,1,""],DevDistItem:[876,1,1,""],DevDistIter:[877,1,1,""],DevDistNest:[878,1,1,""],DevManager:[871,1,1,""],DevMapper:[880,1,1,""],DevMapperMultiProc:[881,1,1,""],MultiDev:[871,1,1,""],MultiDevItem:[883,1,1,""],MultiDevIter:[884,1,1,""],MultiDevNest:[885,1,1,""],Profiler:[886,1,1,""],clear_mem_on_dev:[887,2,1,""],default_device:[888,2,1,""],dev:[889,2,1,""],dev_clone:[890,2,1,""],dev_clone_array:[891,2,1,""],dev_clone_iter:[892,2,1,""],dev_clone_nest:[893,2,1,""],dev_dist:[894,2,1,""],dev_dist_array:[895,2,1,""],dev_dist_iter:[896,2,1,""],dev_dist_nest:[897,2,1,""],dev_from_str:[898,2,1,""],dev_to_str:[899,2,1,""],dev_unify:[900,2,1,""],dev_unify_array:[901,2,1,""],dev_unify_iter:[902,2,1,""],dev_unify_nest:[903,2,1,""],dev_util:[904,2,1,""],get_all_arrays_on_dev:[905,2,1,""],gpu_is_available:[906,2,1,""],num_arrays_on_dev:[907,2,1,""],num_cpu_cores:[908,2,1,""],num_gpus:[909,2,1,""],percent_used_mem_on_dev:[910,2,1,""],print_all_arrays_on_dev:[911,2,1,""],set_default_device:[912,2,1,""],set_split_factor:[913,2,1,""],split_factor:[914,2,1,""],split_func_call:[915,2,1,""],to_dev:[916,2,1,""],total_mem_on_dev:[917,2,1,""],tpu_is_available:[918,2,1,""],unset_default_device:[919,2,1,""],used_mem_on_dev:[920,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[871,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[871,3,1,""],da_tune_step:[871,3,1,""],dim_size:[871,3,1,""],ds_tune_step:[871,3,1,""],map:[871,3,1,""],repeated_config_check:[871,3,1,""],tune_step:[871,3,1,""],tuned:[871,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[880,3,1,""],map:[880,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[871,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[883,3,1,""],items:[883,3,1,""],keys:[883,3,1,""],shape:[883,3,1,""],values:[883,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[884,3,1,""],at_dev:[884,3,1,""],at_devs:[884,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[885,3,1,""],at_dev:[885,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[886,3,1,""],start:[886,3,1,""],stop:[886,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[921,1,1,""],DefaultFloatDtype:[921,1,1,""],DefaultIntDtype:[921,1,1,""],astype:[921,2,1,""],cast:[925,2,1,""],closest_valid_dtype:[926,2,1,""],convert_dtype:[927,2,1,""],default_dtype:[928,2,1,""],default_float_dtype:[929,2,1,""],default_int_dtype:[930,2,1,""],dtype:[931,2,1,""],dtype_bits:[932,2,1,""],dtype_from_str:[933,2,1,""],dtype_to_str:[934,2,1,""],invalid_dtype:[935,2,1,""],is_float_dtype:[936,2,1,""],is_int_dtype:[937,2,1,""],set_default_dtype:[938,2,1,""],set_default_float_dtype:[939,2,1,""],set_default_int_dtype:[940,2,1,""],unset_default_dtype:[941,2,1,""],unset_default_float_dtype:[942,2,1,""],unset_default_int_dtype:[943,2,1,""],valid_dtype:[944,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[921,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[921,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[921,3,1,""]},"ivy.functional.ivy.core.general":{"default":[969,2,1,""],abs:[946,2,1,""],all_equal:[947,2,1,""],arange:[948,2,1,""],arg_names:[949,2,1,""],argmax:[950,2,1,""],argmin:[951,2,1,""],array:[952,2,1,""],array_equal:[953,2,1,""],arrays_equal:[954,2,1,""],asarray:[945,2,1,""],assert_supports_inplace:[955,2,1,""],broadcast_to:[956,2,1,""],cache_fn:[957,2,1,""],clip:[958,2,1,""],clip_matrix_norm:[959,2,1,""],clip_vector_norm:[960,2,1,""],concatenate:[961,2,1,""],constant_pad:[962,2,1,""],container_types:[963,2,1,""],copy_array:[964,2,1,""],cross:[965,2,1,""],cumprod:[966,2,1,""],cumsum:[967,2,1,""],current_framework_str:[968,2,1,""],einops_rearrange:[970,2,1,""],einops_reduce:[971,2,1,""],einops_repeat:[972,2,1,""],equal:[973,2,1,""],exists:[974,2,1,""],expand_dims:[975,2,1,""],floor:[976,2,1,""],floormod:[977,2,1,""],fourier_encode:[978,2,1,""],full:[979,2,1,""],gather:[980,2,1,""],gather_nd:[981,2,1,""],get_all_arrays_in_memory:[982,2,1,""],get_min_base:[983,2,1,""],get_min_denominator:[984,2,1,""],get_num_dims:[985,2,1,""],get_referrers_recursive:[986,2,1,""],has_nans:[987,2,1,""],identity:[988,2,1,""],indices_where:[989,2,1,""],inplace_arrays_supported:[990,2,1,""],inplace_decrement:[991,2,1,""],inplace_increment:[992,2,1,""],inplace_update:[993,2,1,""],inplace_variables_supported:[994,2,1,""],is_array:[995,2,1,""],isinf:[996,2,1,""],linear_resample:[997,2,1,""],linspace:[998,2,1,""],logspace:[999,2,1,""],match_kwargs:[1000,2,1,""],matmul:[1001,2,1,""],maximum:[1002,2,1,""],meshgrid:[1003,2,1,""],minimum:[1004,2,1,""],multiprocessing:[1005,2,1,""],num_arrays_in_memory:[1006,2,1,""],one_hot:[1007,2,1,""],ones:[1008,2,1,""],print_all_arrays_in_memory:[1009,2,1,""],queue_timeout:[1010,2,1,""],repeat:[1011,2,1,""],reshape:[1012,2,1,""],round:[1013,2,1,""],scatter_flat:[1014,2,1,""],scatter_nd:[1015,2,1,""],set_min_base:[1016,2,1,""],set_min_denominator:[1017,2,1,""],set_queue_timeout:[1018,2,1,""],set_tmp_dir:[1019,2,1,""],shape:[1020,2,1,""],shape_to_tuple:[1021,2,1,""],split:[1022,2,1,""],squeeze:[1023,2,1,""],stable_divide:[1024,2,1,""],stable_pow:[1025,2,1,""],stack:[1026,2,1,""],supports_inplace:[1027,2,1,""],swapaxes:[1028,2,1,""],tile:[1029,2,1,""],tmp_dir:[1030,2,1,""],to_list:[1031,2,1,""],to_numpy:[1032,2,1,""],to_scalar:[1033,2,1,""],transpose:[1034,2,1,""],try_else_none:[1035,2,1,""],unstack:[1036,2,1,""],value_is_nan:[1037,2,1,""],where:[1038,2,1,""],zero_pad:[1039,2,1,""],zeros_like:[1040,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1041,1,1,""],adam_step:[1043,2,1,""],adam_update:[1044,2,1,""],execute_with_gradients:[1045,2,1,""],gradient_descent_update:[1046,2,1,""],is_variable:[1047,2,1,""],lamb_update:[1048,2,1,""],lars_update:[1049,2,1,""],optimizer_update:[1050,2,1,""],set_with_grads:[1051,2,1,""],stop_gradient:[1052,2,1,""],unset_with_grads:[1053,2,1,""],variable:[1054,2,1,""],variable_data:[1055,2,1,""],with_grads:[1056,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1041,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1058,2,1,""],float_img_to_uint8_img:[1059,2,1,""],gradient_image:[1060,2,1,""],random_crop:[1061,2,1,""],stack_images:[1062,2,1,""],uint8_img_to_float_img:[1063,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1065,2,1,""],inv:[1066,2,1,""],matrix_norm:[1067,2,1,""],pinv:[1068,2,1,""],qr:[1069,2,1,""],vector_to_skew_symmetric_matrix:[1070,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1072,2,1,""],logical_or:[1073,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1075,2,1,""],asin:[1076,2,1,""],atan2:[1078,2,1,""],atan:[1077,2,1,""],atanh:[1079,2,1,""],cosh:[1080,2,1,""],divide:[1081,2,1,""],erf:[1082,2,1,""],exp:[1083,2,1,""],log:[1084,2,1,""],tan:[1085,2,1,""],tanh:[1086,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1088,2,1,""],maml_step:[1089,2,1,""],reptile_step:[1090,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1091,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1136,2,1,""],copy_nest:[1137,2,1,""],index_nest:[1138,2,1,""],map:[1139,2,1,""],map_nest_at_index:[1140,2,1,""],map_nest_at_indices:[1141,2,1,""],multi_index_nest:[1142,2,1,""],nested_indices_where:[1143,2,1,""],nested_map:[1144,2,1,""],set_nest_at_index:[1145,2,1,""],set_nest_at_indices:[1146,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1148,2,1,""],randint:[1149,2,1,""],random_normal:[1150,2,1,""],random_uniform:[1151,2,1,""],seed:[1152,2,1,""],shuffle:[1153,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1155,2,1,""],reduce_max:[1156,2,1,""],reduce_mean:[1157,2,1,""],reduce_min:[1158,2,1,""],reduce_prod:[1159,2,1,""],reduce_std:[1160,2,1,""],reduce_sum:[1161,2,1,""],reduce_var:[1162,2,1,""]},"ivy.functional.ivy.nn":{activations:[1164,0,0,"-"],layers:[1172,0,0,"-"],losses:[1185,0,0,"-"],norms:[1189,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1165,2,1,""],leaky_relu:[1166,2,1,""],relu:[1167,2,1,""],sigmoid:[1168,2,1,""],softmax:[1169,2,1,""],softplus:[1170,2,1,""],tanh:[1171,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1173,2,1,""],conv1d_transpose:[1174,2,1,""],conv2d:[1175,2,1,""],conv2d_transpose:[1176,2,1,""],conv3d:[1177,2,1,""],conv3d_transpose:[1178,2,1,""],depthwise_conv2d:[1179,2,1,""],dropout:[1180,2,1,""],linear:[1181,2,1,""],lstm_update:[1182,2,1,""],multi_head_attention:[1183,2,1,""],scaled_dot_product_attention:[1184,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1186,2,1,""],cross_entropy:[1187,2,1,""],sparse_cross_entropy:[1188,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1190,2,1,""]},"ivy.stateful":{activations:[1194,0,0,"-"],converters:[1197,0,0,"-"],initializers:[1199,0,0,"-"],layers:[1208,0,0,"-"],module:[1220,0,0,"-"],norms:[1222,0,0,"-"],optimizers:[1224,0,0,"-"],sequential:[1230,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1195,1,1,""],GELU:[1196,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1195,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1196,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1198,2,1,""]},"ivy.stateful.initializers":{Constant:[1199,1,1,""],FirstLayerSiren:[1201,1,1,""],GlorotUniform:[1202,1,1,""],KaimingNormal:[1199,1,1,""],Ones:[1204,1,1,""],Siren:[1205,1,1,""],Uniform:[1199,1,1,""],Zeros:[1207,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1199,3,1,""],create_variables:[1199,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1201,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1202,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1199,3,1,""],create_variables:[1199,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1204,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1205,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1199,3,1,""],create_variables:[1199,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1207,3,1,""]},"ivy.stateful.layers":{Conv1D:[1209,1,1,""],Conv1DTranspose:[1210,1,1,""],Conv2D:[1211,1,1,""],Conv2DTranspose:[1212,1,1,""],Conv3D:[1213,1,1,""],Conv3DTranspose:[1214,1,1,""],DepthwiseConv2D:[1215,1,1,""],Dropout:[1216,1,1,""],LSTM:[1217,1,1,""],Linear:[1218,1,1,""],MultiHeadAttention:[1219,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1209,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1210,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1211,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1212,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1213,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1214,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1215,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1216,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1217,3,1,""],get_initial_state:[1217,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1218,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1219,3,1,""]},"ivy.stateful.module":{Module:[1221,1,1,""]},"ivy.stateful.module.Module":{__init__:[1221,3,1,""],build:[1221,3,1,""],build_mode:[1221,3,1,""],built:[1221,3,1,""],check_submod_rets:[1221,3,1,""],get_mod_key:[1221,3,1,""],mod_depth:[1221,3,1,""],mod_height:[1221,3,1,""],mod_with_top_mod_key_chain:[1221,3,1,""],save_weights:[1221,3,1,""],show_mod_in_top_mod:[1221,3,1,""],show_structure:[1221,3,1,""],show_v_in_top_v:[1221,3,1,""],sub_mods:[1221,3,1,""],track_submod_call_order:[1221,3,1,""],track_submod_rets:[1221,3,1,""],v_with_top_v_key_chains:[1221,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1223,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1223,3,1,""]},"ivy.stateful.optimizers":{Adam:[1225,1,1,""],LAMB:[1226,1,1,""],LARS:[1227,1,1,""],Optimizer:[1228,1,1,""],SGD:[1229,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1225,3,1,""],set_state:[1225,3,1,""],state:[1225,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1226,3,1,""],set_state:[1226,3,1,""],state:[1226,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1227,3,1,""],set_state:[1227,3,1,""],state:[1227,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1228,3,1,""],set_state:[1228,3,1,""],step:[1228,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1229,3,1,""],set_state:[1229,3,1,""],state:[1229,3,1,""]},"ivy.stateful.sequential":{Sequential:[1231,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1231,3,1,""]},"ivy.verbosity":{cprint:[1236,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1235,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1224,1225,1226],"02886":1191,"100":[1091,1191,1233],"141592653589793":815,"2021":1191,"2102":1191,"360":[1074,1085],"718281828459045":815,"754":[815,823,824,827,846],"999":[1041,1043,1044,1048,1224,1225,1226],"abstract":[871,886,1191,1224,1228],"boolean":[40,41,827,830,841,842,871,906,918,921,935,944,945,947,953,954,987,989,990,994,995,996,1027,1037,1041,1047,1071,1072,1073,1087,1088,1089,1091],"break":43,"case":[15,18,19,40,41,42,43,827,828,829,831,832,833,838,840,844,845,846,871,910,917,920,945,948,1012,1014,1015,1064,1067,1069,1091,1135,1138,1142,1191,1208,1219,1220,1221,1224,1228,1237],"catch":[945,969],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,365,413,414,823,825,871,873,874,875,876,877,878,880,881,883,884,885,886,898,899,921,945,949,1000,1041,1055,1091,1135,1137,1144,1185,1187,1188,1191,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1237],"default":[15,18,19,40,41,42,43,816,817,818,819,820,821,822,849,850,855,856,857,858,859,861,862,863,864,865,866,867,869,870,871,880,881,888,889,893,894,895,896,897,900,901,902,903,910,913,914,915,920,921,928,929,930,931,945,947,948,950,951,959,960,961,962,965,966,967,978,979,980,985,987,988,997,999,1000,1003,1005,1008,1010,1011,1014,1015,1018,1020,1022,1024,1025,1034,1036,1037,1041,1044,1046,1047,1048,1049,1050,1052,1056,1064,1067,1069,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1169,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],"final":[40,41,43,945,978,998,999,1091,1208,1219,1234],"float":[40,41,42,358,360,815,816,817,818,819,822,823,824,827,828,829,831,832,833,838,840,844,845,846,847,849,855,871,880,881,904,910,913,917,920,921,929,936,945,948,959,960,962,978,979,983,984,999,1016,1017,1018,1024,1025,1041,1043,1044,1046,1048,1049,1050,1057,1059,1063,1074,1081,1087,1088,1089,1090,1091,1147,1150,1151,1164,1166,1172,1180,1183,1184,1185,1186,1187,1188,1189,1190,1208,1216,1219,1222,1223,1224,1225,1226,1227,1228,1229],"function":[15,40,41,43,359,360,361,362,363,364,367,368,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,815,817,818,819,820,821,822,824,825,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,857,859,862,864,866,867,869,870,871,873,874,875,876,877,878,880,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1194,1195,1196,1224,1227,1228,1229,1233,1234,1237],"import":[43,1191,1234,1237],"int":[40,41,42,43,358,359,360,361,363,364,463,816,817,818,819,821,822,823,824,825,849,850,854,855,856,857,858,859,861,862,863,864,865,866,867,869,870,871,893,894,895,896,897,900,901,902,903,908,909,915,921,930,932,937,945,950,951,956,961,962,966,967,970,971,972,975,978,979,980,985,988,997,998,999,1007,1008,1011,1012,1014,1015,1020,1021,1022,1023,1026,1028,1029,1034,1036,1039,1041,1043,1044,1048,1057,1061,1062,1064,1067,1087,1088,1089,1090,1091,1135,1144,1147,1148,1149,1151,1152,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1173,1174,1175,1176,1177,1178,1179,1183,1185,1187,1188,1189,1190,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1222,1223],"long":[43,1172,1182],"new":[40,41,43,463,816,817,818,819,820,822,827,839,921,925,945,946,956,970,971,972,975,978,979,980,981,1008,1012,1014,1015,1016,1017,1024,1025,1026,1041,1044,1046,1048,1049,1050,1057,1059,1061,1063,1074,1079,1080,1086,1091,1135,1145,1146,1147,1148,1189,1190,1191,1197,1198,1208,1218,1222,1223,1224,1225,1226,1227,1228,1229,1234,1237],"public":[945,963],"return":[15,16,17,18,19,40,41,42,43,463,816,817,818,819,820,821,822,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,849,850,852,853,854,855,858,859,861,862,863,864,865,866,867,869,870,871,880,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,906,907,909,910,914,915,916,917,918,920,921,925,926,927,928,929,930,931,932,933,934,935,936,937,944,945,946,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,985,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1011,1012,1013,1014,1015,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1052,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1197,1198,1208,1217,1218,1224,1228,1233,1234,1237],"short":[43,1172,1182,1191,1237],"static":[40,41,869,870],"super":1091,"true":[40,41,42,415,420,447,450,463,464,827,834,835,841,842,849,853,855,858,859,861,862,865,866,867,869,870,871,945,947,955,957,974,978,987,989,1037,1038,1041,1044,1046,1047,1048,1049,1050,1052,1064,1067,1087,1088,1089,1090,1091,1135,1136,1143,1147,1148,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1172,1180,1185,1186,1187,1188,1208,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],"try":[40,41,945,1035,1091],"var":[40,41,1087,1088,1089,1237],"while":[40,41,42,827,841,842,1091],AND:[827,830,865,866,1071,1072],But:1237,For:[43,827,828,829,831,832,833,838,840,844,845,846,945,948,958,1026,1041,1047,1055,1064,1069,1074,1075,1191,1197,1198,1234,1237],Its:[1074,1077],NOT:[827,841],Not:815,One:[40,41,43,945,971,1012,1147,1149,1237],Ones:[1191,1199],PRs:43,Such:[945,963],That:1234,The:[15,16,17,18,19,40,41,42,43,816,821,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,844,845,846,847,849,850,852,853,854,855,856,857,861,862,865,866,867,869,870,871,880,881,887,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,910,913,914,915,916,917,920,921,925,926,927,932,933,934,935,944,945,948,952,953,956,957,959,960,961,962,964,965,968,969,973,978,980,981,988,991,992,993,995,997,999,1001,1003,1005,1008,1011,1012,1014,1015,1016,1017,1018,1021,1022,1023,1024,1025,1026,1029,1037,1040,1041,1043,1044,1046,1048,1049,1050,1052,1055,1057,1059,1061,1063,1064,1067,1069,1074,1075,1076,1077,1081,1082,1083,1084,1085,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1234,1237],There:[43,1191,1234],These:[43,1191],Use:43,Used:[1135,1136,1143,1220,1221],Using:[1191,1192,1237],With:[40,41,858,859,1064,1067,1154,1156,1157,1158,1159,1160,1161,1162,1191,1233,1237],__array__:[945,952],__call__:[1208,1219,1220,1221],__del__:1091,__dict__:[1091,1234],__enter__:1091,__exit__:1091,__getitem__:1091,__getstate__:1091,__init__:[40,41,42,43,59,60,85,222,365,366,413,414,496,629,871,872,879,880,881,882,883,884,885,886,921,922,923,924,1041,1042,1091,1095,1102,1191,1194,1195,1196,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1237],__iter__:1091,__len__:1091,__next__:1091,__repr__:1091,_assign_vari:1233,_axi:1091,_base:[1135,1136,1143],_compute_node_da_ratio:1091,_compute_node_strs_da:1091,_concat_unify_arrai:1091,_counter:1091,_cur_framework:[43,1091],_da_direct:1091,_da_directions_flip:1091,_da_step_tim:1091,_da_tim:1091,_da_tune_count:1091,_data:1091,_delta_da_dim_s:1091,_delta_sf:1091,_dict:1091,_dim_siz:1091,_first_da_tune_step:1091,_first_ns_tune_step:1091,_fn:1091,_forward:[1191,1233],_get_kalman_param:1237,_get_prior:1237,_get_some_model:1237,_index:[1135,1136,1143],_input_queu:1091,_length:1091,_max_depth:1091,_max_node_dim_step_ratio:1091,_max_node_dim_step_s:1091,_max_split_factor_step_s:1091,_mean_unify_arrai:1091,_min_bas:[945,1025,1189,1190,1222,1223],_min_denomin:[945,1024],_min_node_dim_s:1091,_min_sf_tune_step:1091,_min_unit_node_tune_step:1091,_model:1237,_node_mapp:1091,_node_percent_mem:1091,_node_str:1091,_node_str_da_ratio:1091,_node_strs_da:1091,_node_strs_kei:1091,_node_strs_n:1091,_node_util:1091,_ns_step_tim:1091,_ns_time:1091,_ns_tune_count:1091,_num_nod:1091,_num_work:1091,_observed_config:1091,_output_queu:1091,_paramet:1233,_percent_mem_inc_per_sf:1091,_percent_mem_inc_per_unit_da_dim:1091,_percent_util_inc_per_unit_da_dim:1091,_ret_fn:1091,_safety_factor:1091,_save_dir:1091,_shift_da_split:1091,_shift_n:1091,_slice:1091,_step:[1224,1228],_sum_unify_arrai:1091,_timeout:1091,_tune:1091,_tune_da:1091,_tune_n:1091,_tune_step:1091,_unit_da_tune_count:1091,_unroll_step:1237,_with_node_mappig:1091,_worker:1091,_worker_class:1091,_worker_fn:1091,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,871,880,886,1091,1220,1221,1224,1228],abil:1191,abl:[40,41],about:[823,824,825],abov:[43,816,821,849,850,1147,1149],above_height:[40,41],abs:[264,415,550,684,849,855,945,1091],absolut:[40,41,849,852,945,946],abstractmethod:1091,accept:[15,43,827,841,842,1191],access:[40,41,43,1234],accord:[40,41,823,824,945,962,980,1014,1015,1034,1039],accordingli:[849,855,865,866,867],accur:[59,365,413,414,871,883,884,885,886,921,1041,1199,1201,1202,1204,1205,1207],aco:[767,1074],acosh:[89,226,370,500,633,827],across:[40,41,871,880,881,890,891,893,894,895,896,897,903,913,914,945,950,951,953,954,1091,1135,1139],act:43,activ:[1165,1166,1167,1168,1169,1170,1171,1191,1195,1196],actual:1234,adam:[1041,1043,1044,1048,1191,1224,1226,1233],adam_step:1041,adam_upd:1041,adapt:[1041,1049,1224,1227],add:[40,41,43,1091,1185,1186,1187,1188,1189,1190,1191,1222,1223,1234],added:[43,945,1024,1025,1230,1231],adding:[43,945,956],addit:[40,41,43,945,970,971,972,1189,1190,1208,1218],addition:43,address:43,adher:43,adjac:[945,948],adopt:[43,945,963],affect:[945,948],affin:[1222,1223],after:[827,846,945,997,1041,1044,1045,1046,1048,1049,1050,1057,1058,1189,1190,1224,1225,1226,1227,1228,1229,1237],after_1:[945,962,1039],after_n:[945,962,1039],again:43,against:[40,41,849,851,858,859,1064,1067,1154,1156,1157,1158,1159,1160,1161,1162],agnost:[43,1191,1233,1234],aim:1237,algebra:1064,algorithm:[1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215,1237],align:[40,41,43,945,956],aliv:[871,905,907,911,945,982,1006,1009],all:[15,16,17,18,19,40,41,43,128,254,409,539,672,816,821,849,855,856,857,865,869,870,871,880,905,911,945,946,947,953,954,963,982,988,1009,1023,1064,1069,1087,1088,1089,1090,1091,1135,1136,1137,1143,1144,1147,1148,1151,1154,1156,1157,1158,1159,1160,1161,1162,1172,1182,1191,1234,1237],all_depth:[40,41],all_equ:945,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1135,all_tru:[40,41],alloc:[43,816,821,871,1091],allow:[945,998,999,1000,1220,1221],allow_dupl:[945,1000],alon:[871,910,920,1091,1191],along:[40,41,43,463,849,854,855,856,857,858,859,861,862,863,864,865,866,867,871,894,895,896,897,900,901,902,903,915,945,961,966,967,980,997,998,999,1011,1022,1026,1029,1036,1064,1067,1087,1088,1089,1090,1091,1147,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162],alongsid:[1233,1234],alpha:[1164,1166],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,827,831,871,1091],also:[40,41,43,945,948,1041,1044,1087,1088,1089,1090,1135,1136,1137,1143,1144,1172,1181,1191,1208,1218,1233],altern:1233,alwai:[40,41,43,1041,1047,1052],among:[40,41],amount:[871,917,1091,1191],angl:[827,833,845,847,1074,1075,1078],ani:[15,16,17,18,19,40,41,43,128,254,409,539,672,827,837,865,869,870,871,873,876,880,881,883,892,893,896,897,902,945,947,948,952,969,970,971,972,973,974,987,995,1000,1024,1025,1041,1045,1091,1135,1136,1139,1143,1144,1145,1146,1147,1151,1191,1197,1198,1220,1221,1233,1234,1237],anoth:[40,41,43,921,927,1191],another_backend:43,anyth:[43,1237],anywai:43,apart:43,api:[1191,1192],appear:[43,945,975],append:[40,41,849,850,851,1091],appli:[15,18,19,40,41,849,853,945,970,971,972,1041,1048,1049,1071,1072,1073,1087,1088,1089,1135,1139,1142,1144,1164,1165,1166,1167,1168,1169,1170,1171,1172,1181,1183,1184,1189,1190,1191,1194,1195,1196,1222,1223],applic:[1135,1139,1144,1172,1183,1184,1191,1237],appropri:[858,859],approxim:[827,828,829,832,833,838,839,840,844,845,847,1164,1165],arang:[139,264,415,463,550,684,945,998,999],arbitrari:[40,41,871,900,901,903,1091],arc:[1074,1078],arcco:[1074,1075],arctan:[1074,1077],area:[827,828,829,1191],arg:[15,16,17,40,41,43,59,63,871,880,893,897,903,915,945,970,971,972,1015,1091,1197,1198,1220,1221],arg_nam:945,arg_stateful_idx:[1220,1221],argmax:[121,248,402,532,665,858,945],argmin:[139,415,550,684,945],args_clon:1091,args_dist:1091,args_to_ivi:[15,1191],args_to_n:[15,1191],args_uni:1091,argsort:[124,251,405,535,668,861],argument:[15,16,17,18,19,40,41,42,43,59,63,869,870,871,880,881,893,897,903,945,948,949,957,969,1000,1015,1074,1075,1091,1135,1139,1197,1198,1220,1221],aris:[1191,1237],arithmet:[1154,1157,1160,1162],arithmetic_oper:[0,1,2],around:[40,41,42],arr:463,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,139,264,415,463,550,684,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,866,867,871,889,890,891,894,895,896,897,900,901,902,903,905,907,911,915,916,921,925,931,936,937,945,946,947,948,950,951,953,954,955,956,958,959,960,961,962,964,965,966,967,970,971,972,973,975,976,977,978,979,980,981,982,985,987,988,989,990,991,992,993,995,996,997,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1011,1012,1013,1014,1015,1020,1022,1023,1026,1027,1028,1029,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1043,1044,1047,1048,1052,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1091,1135,1137,1144,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1208,1216,1217,1219,1224,1228,1233,1234],arrang:[945,970],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,358,359,360,361,362,363,364,365,367,368,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,866,867],array_api_methods_to_test:43,array_equ:[264,684,945],array_lik:[463,945,952],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,945],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1191],arraywithgener:[22,1191],arraywithgradi:[24,1191],arraywithimag:[26,1191],arraywithlinalg:[28,1191],arraywithlog:[30,1191],arraywithmath:[32,1191],arraywithmeta:[34,1191],arraywithrandom:[36,1191],arraywithreduct:[38,1191],arriv:[40,41,42],articl:1191,arxiv:1191,as_arrai:[40,41,945,985,1020],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[413,415,423,871,889,921,928,929,930,931],as_tensor:415,as_vari:[40,41],as_zero:[40,41],asarrai:[415,945],ascend:[861,862],asin:[767,1074],asinh:[89,370,500,633,827],aspect:[1057,1062],assert:[40,41,945,955,1091],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:945,associ:[43,1064,1070],assum:[827,832,844,1234,1237],astyp:[415,921],asynchron:[40,41,42],at_dev:[40,42,871,884,885],at_kei:[40,41],at_key_chain:[40,41],at_nod:1091,atan2:[767,1074],atan:[767,1074],atanh:[767,1074],attent:[43,1172,1183,1184,1208,1219],attribut:[0,6,40,41,823,824,825,945,1040],audienc:[1191,1234],author:1191,automat:43,avail:[40,41,43,871,906,908,909,918,945,971,1091],averag:[1041,1043,1044,1048,1087,1088,1089,1154,1157],average_across_step:[1087,1088,1089],avoid:[43,871,1091,1234],axes:[40,41,43,415,444,456,457,849,855,856,857,858,859,863,864,865,866,867,871,915,945,950,951,962,975,1028,1034,1039,1064,1067,1091,1154,1156,1157,1158,1159,1160,1161,1162],axes_length:[40,41,945,970,971,972],axi:[40,41,415,417,421,422,428,436,437,438,442,443,445,849,850,854,855,856,857,858,859,861,862,863,864,865,866,867,871,873,876,883,894,895,896,897,900,901,902,903,915,945,950,951,961,962,965,966,967,975,980,997,998,999,1011,1022,1023,1026,1028,1029,1036,1039,1091,1147,1153,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1185,1187,1188],axis0:[40,41,945,1028],axis1:[40,41,849,850,945,1028],axis2:[849,850],back:[43,1220,1221,1224,1228],backend:[15,17,19,40,41,358,359,360,361,362,363,364,365,367,368,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,871,906,909,918,921,927,935,944,945,990,994,1041,1044,1046,1048,1049,1050,1055,1091,1191,1192,1197,1198,1224,1225,1226,1227,1228,1229,1233,1234,1237],backend_nam:43,background:[1191,1234],backprop:1237,backward:[865,866,867,1233],band:[945,978],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,365,413,414,415,438,827,838,839,840,871,873,874,875,876,877,878,880,881,883,884,885,886,921,945,983,999,1016,1025,1041,1091,1154,1155,1191,1194,1195,1196,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1237],basi:43,batch:[40,41,849,853,855,871,913,914,945,978,988,1057,1061,1087,1088,1089,1090,1091,1172,1181,1189,1190,1222,1223],batch_shap:[415,430,945,988,1007,1057,1058,1059,1060,1061,1062,1063,1064,1070,1147,1148,1172,1182,1183,1184,1208,1217],batch_siz:[463,464,1091,1147,1148,1172,1173,1174,1175,1176,1177,1178,1179],bayesian:1237,becaus:[43,945,948],becom:[43,945,958,1074,1078,1237],been:[945,970,971,972,1147,1148],befor:[40,41,43,871,915,1087,1088,1089,1091,1135,1144,1154,1156,1157,1158,1159,1160,1161,1162,1172,1183,1184,1237],before_1:[945,962,1039],before_n:[945,962,1039],begin:[1135,1136,1143,1234],behaviour:[43,1237],behind:[1041,1044,1046,1048,1049,1050,1191],being:[40,41,43,945,948,1010,1018,1091],believ:43,belong:[40,41],below:[43,816,821,849,850,1191,1234,1237],below_depth:[40,41],benefit:1191,bernoul:[1172,1180,1208,1216],best:[43,945,1000,1191],beta1:[1041,1043,1044,1048,1224,1225,1226],beta2:[1041,1043,1044,1048,1224,1225,1226],beta:[1189,1190],between:[40,41,42,823,824,945,948,1064,1069,1135,1139,1147,1149,1185,1187,1188,1224,1226],bia:[1172,1181,1182,1208,1209,1210,1211,1212,1213,1214,1215,1218],bias_initi:[1208,1209,1210,1211,1212,1213,1214,1215,1218],bilinear:[1057,1058],bilinear_resampl:[173,317,452,589,753,1057],bilinearli:[1057,1058],binari:[827,830,1185,1186],binary_cross_entropi:1185,bit:[365,823,824,825,921,932,1057,1059,1063,1191],bitwis:[827,830],bitwise_and:[89,226,370,500,633,827],bitwise_oper:[0,7,8],block:[1191,1234],bool:[15,18,19,40,41,42,43,827,834,835,836,837,841,842,849,853,855,858,859,861,862,863,864,865,866,867,869,870,871,889,902,906,910,915,918,920,921,931,945,947,953,954,966,969,973,974,978,985,987,995,1000,1020,1022,1036,1037,1038,1041,1044,1045,1046,1047,1048,1049,1050,1052,1064,1067,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1172,1180,1197,1198,1208,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],both:[43,849,851,945,965],bottom:1191,boundari:[40,41,1147,1151],branch:[43,869,870],brittl:43,broadcast:[40,41,827,830,836,837,842,849,851,855,858,859,865,866,867,945,956,973,1002,1003,1004,1011,1064,1067,1074,1078,1081,1154,1156,1157,1158,1159,1160,1161,1162],broadcast_to:[264,684,945],build:[1091,1191,1208,1219,1220,1221],build_mod:[1208,1219,1220,1221],builder:[43,1191],built:[871,945,948,1091,1208,1219,1220,1221],busi:43,bypass:1234,cach:[871,887,945,957],cache_fn:945,calcul:[40,41,42,827,828,829,832,833,838,839,840,844,845,846,847,1074,1081],call:[43,871,915,945,1010,1018,1035,1041,1045,1091,1135,1136,1139,1143,1208,1219,1220,1221,1224,1228,1234,1237],callabl:[40,41,869,870,871,880,881,915,945,957,969,971,1000,1035,1087,1088,1089,1090,1091,1135,1139,1140,1141,1143,1144,1172,1183],can:[43,871,913,914,915,945,1012,1057,1059,1091,1191,1233,1234,1237],cancel_join_thread:1091,cannot:43,captur:1191,cast:[40,41,139,264,415,550,684,921,945,961,1057,1059,1063],catch_except:[945,969],categori:43,caus:43,ceil:[89,226,370,500,633,827,945,948],cell:[1172,1182,1208,1217],certain:[40,41,945,948,998,999],chain:[40,41,1087,1088,1089,1230,1231],chang:[43,871,945,1012,1091,1135,1137,1144,1191,1233],channel:[945,978,1057,1059,1060,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218],check:[15,16,17,18,19,40,41,43,871,910,920,921,926,935,944,945,955,974,987,995,1027,1037,1041,1047,1091,1135,1136,1143,1191,1234],check_nest:[1135,1143],check_shap:[40,41],check_submod_ret:[1220,1221],check_typ:[40,41],choic:[1191,1234],choleski:[757,1064],choos:[827,841,842,945,1038,1064,1069,1074,1078,1191],choose_random_framework:59,chosen:[40,41,945,948,1038],chunk:[871,913,914,915,1091],chunk_siz:[871,915,1091],circl:[1074,1075,1076],clark:1191,clear:[43,871,887,1091],clear_framework_stack:59,clear_mem_on_dev:[413,676,871],click:1191,clip:[40,41,264,415,684,945,959,960,1002,1004,1191],clip_matrix_norm:945,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,945],clipped_delta:1091,clone:[40,41,871,890,891,892,893,1091],clone_arrai:1091,clone_it:1091,clone_nest:1091,clonedit:1091,cloneditem:1091,clonednest:1091,close:[43,1057,1062,1074,1076,1091,1237],closest:[827,831,921,926],closest_valid_dtyp:921,code:[40,41,42,43,463,1191,1192,1233,1234],codebas:[871,913,914,1091,1191,1234,1237],codomain:[827,828,829,832,833,838,840,844,845,846,847],colab:1191,collect:[15,40,41,413,415,447,452,456,460,461,463,869,871,921,945,1041,1057,1064,1071,1074,1091,1135,1147,1154,1164,1172,1185,1189,1194,1208,1222,1224],color:[40,41,42,1235,1236],column:[945,988],combin:[40,41,42,1057,1062,1191,1237],combined_batch_s:1091,come:1234,command:1191,comment:43,commit:1237,common:[40,41,43,1074,1078],common_key_chain:[40,41],commun:[43,1191,1234],communuti:43,compar:[40,41,861,862,945,947,953,954],comparison_oper:[0,9,10],compat:[827,830,836,837,842,849,855,865,866,867,945,973,1012,1074,1081,1191,1237],compil:[264,415,684,1220,1221,1224,1225,1226,1227,1228,1229],compile_on_next_step:[1220,1221,1224,1225,1226,1227,1228,1229],complet:[40,41,43,1064,1069,1091],complex:[1234,1237],compliant:[827,841,842],compon:[945,965],composit:43,comput:[40,41,827,830,836,837,841,842,843,849,851,852,854,855,863,864,871,915,945,959,960,966,967,973,1001,1041,1043,1044,1045,1046,1048,1049,1050,1052,1054,1057,1060,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1082,1083,1084,1085,1135,1139,1154,1155,1156,1157,1158,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1181,1183,1185,1186,1187,1188],concat:[40,41,871,900,901,902,903,915,945,978,1091],concaten:[40,41,139,264,415,550,684,945,978,1091,1191],concatten:[40,41,871,900,901,902,903,915,1091],condit:[415,869,870,945,1038,1135,1143],conditon:[1135,1143],config:[40,41,1091],config_list:1091,configur:[40,41],conflict:43,conform:43,conjunct:1234,connect:[1208,1218,1219],consid:[40,41,827,841,842,1064,1069,1233,1237],consist:[40,41,871,903,1091,1154,1155,1220,1221,1234],constant:[871,880,881,945,962,1091,1135,1139,1185,1186,1187,1188,1189,1190,1199,1200,1204,1207,1220,1221,1222,1223,1234],constant_kwarg:1091,constant_pad:[264,415,550,684,945],constitu:[40,41],construct:[945,1029,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233],constructor:[40,41,42,945,949,1230,1231],consum:[871,1091],cont_feat_dim:[1172,1183],contaienr:[40,41],contain:[15,18,19,42,816,819,821,822,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,855,863,864,865,866,867,871,890,894,915,921,925,945,946,950,951,958,959,960,963,973,987,1002,1004,1013,1024,1025,1041,1043,1044,1046,1048,1049,1050,1074,1081,1087,1088,1089,1090,1091,1147,1148,1154,1156,1157,1158,1160,1162,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[415,684,945],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[415,945,1005,1172,1183,1208,1219],context_dim:[1208,1219],contextmanag:[59,60],continu:[43,1091,1234],contract:[40,41,1154,1155],contribut:[1191,1192],contributor:[43,1191],control:1191,conv1d:[204,347,477,805,1172,1191,1208],conv1d_transpos:[204,347,477,805,1172],conv1dtranspos:[1191,1208],conv2d:[204,347,477,614,805,1172,1191,1208],conv2d_transpos:[204,347,477,805,1172],conv2dtranspos:[1191,1208],conv3d:[204,347,477,614,805,1172,1191,1208],conv3d_transpos:[204,347,477,805,1172],conv3dtranspos:[1191,1208],convent:[40,41,849,851,1154,1155],conver:[871,887,898,910,917,920,1091],convers:[16,17,18,19,40,41,1091,1191],convert:[15,16,17,18,19,40,41,43,871,898,899,921,927,933,934,945,1021,1032,1033,1057,1059,1063,1064,1070,1091,1135,1137,1144,1191,1198],convert_dtyp:921,convolut:[1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],cool:43,cooler:43,coordin:[945,1003,1074,1075,1076,1078],copi:[40,41,43,463,945,964,1091,1135,1137],copy_arrai:[415,684,945],copy_nest:1135,core:[413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,869,870,871,873,874,875,876,877,878,880,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1191],corner:43,correct:[43,1191,1234],correctli:[40,41,43,858,859,1064,1067,1074,1078,1154,1156,1157,1158,1159,1160,1161,1162],correspond:[40,41,945,961,1147,1148],cos:[89,370,500,633,827,945,978,1074,1075,1085,1234],cosh:[89,370,500,633,767,827,1074],cosin:[827,828,832,833,1074,1075,1080],cost:[1041,1043,1044,1046,1048,1049,1050,1087,1088,1089,1090],cost_fn:[1087,1090],could:1237,count:[40,41,856,857,865,866,867,1091,1154,1159,1161],cours:43,cprint:1235,cpu:[40,41,43,871,908,910,916,917,920,945,948,952,980,981,988,998,999,1007,1008,1014,1015,1040,1091,1147,1148,1149,1150,1151,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1233,1234],creat:[40,41,816,817,818,819,820,822,871,880,881,945,948,952,979,980,981,988,998,999,1007,1008,1014,1015,1031,1040,1041,1054,1091,1147,1148,1149,1150,1151,1191,1192,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1237],create_if_abs:[40,41],create_vari:1199,creation:[40,41,42,43],creation_funct:[358,359,360,361,362,363,364,816,817,818,819,820,821,822],crop:[1057,1061],crop_siz:[1057,1061],cross:[264,684,945,1185,1186,1187,1188],cross_entropi:1185,cuda:[40,41,871,880,899,916,945,948,952,980,981,988,998,999,1007,1008,1014,1015,1040,1091,1147,1148,1149,1150,1151,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231],cumprod:[139,264,415,684,945],cumsum:[684,945],cumul:[945,966,967],current:[40,41,42,43,871,880,904,905,907,911,921,927,935,944,945,968,982,990,994,1006,1009,1091,1135,1136,1143,1191,1237],current_framework:59,current_framework_str:[415,684,945,1091],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1172,1173,1174,1175,1176,1177,1178],d_out:[1172,1173,1174,1175,1176,1177,1178],da_can_termin:1091,da_dim_s:[871,1091],da_direct:1091,da_tune_step:[871,1091],dai:[43,1237],daniel:1191,data:[40,41,42,43,816,817,818,819,820,821,822,824,825,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,844,845,846,847,849,850,851,855,856,857,861,862,865,866,867,871,873,874,875,876,877,878,883,884,885,899,921,925,926,927,931,932,933,934,935,936,937,944,945,948,952,973,979,988,995,1008,1012,1023,1027,1040,1041,1047,1055,1074,1081,1091,1172,1181,1191],data_format:[1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],data_type_funct:[365,367,368,823,824,825],dataset:[40,41],datatyp:[40,41,921,926,936,937],dcdw:[1041,1043,1044,1046,1048,1049],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1041,1048,1049,1224,1226,1227],decay_lambda:[1041,1048,1049,1224,1226,1227],decid:[40,41,1237],decompos:[1064,1065,1069],decomposit:[849,853,1064,1065,1069],decrement:[945,991],dedic:[1041,1055,1197,1198],deep:[40,41,1191],deep_copi:[40,41],deeper:[871,893,897,903,1091,1135,1144,1191],deepli:[1135,1137],def:[43,60,85,222,366,496,629,872,879,882,922,923,924,1042,1091,1095,1102,1191,1200,1203,1206,1233,1234,1237],default_dev:43,default_devic:871,default_dtyp:[43,921],default_float_dtyp:921,default_int_dtyp:921,default_key_color:[40,41,42],default_nod:1091,default_rng:463,default_v:[945,969],defaultdevic:[871,872],defaultdtyp:[921,922],defaultfloatdtyp:[921,923],defaultintdtyp:[921,924],defin:[43,945,965,1007,1040,1147,1149],definit:43,degre:[1074,1085],del:1091,delai:43,delet:43,delta:[1041,1043,1091],delta_dim_s:1091,delta_percent_mem:1091,delta_sf:1091,delta_util:1091,demo:1191,denomin:[945,977,984,1017,1024,1025,1189,1190,1222,1223],denot:43,dens:[1208,1218],depend:[827,828,829,832,833,838,839,840,844,845,847,849,853,861,862,945,1038,1191],depth:[40,41,415,439,871,893,897,903,945,986,1007,1091,1135,1144,1220,1221],depth_cutoff:[40,41],depthwis:[1172,1179,1208,1215],depthwise_conv2d:[204,347,477,614,805,1172],depthwiseconv2d:[1191,1208],deriv:[816,818,820,1041,1043,1044,1046,1048,1049,1050,1135,1137,1144,1191,1220,1224,1228,1230],descend:[849,853,861,862],descent:[1041,1046,1224,1229],describ:[40,41,1154,1155],descript:[849,855],design:[1191,1192],desir:[40,41,871,916,921,925,945,948,952,988,989,1008,1040,1057,1062,1091,1154,1156,1157,1158,1160,1162],desired_aspect_ratio:[452,455,1057,1062],desired_percent_increas:1091,detail:1237,detect:[40,41,1135,1136,1143],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,827,828,829,830,832,833,834,835,838,840,844,845,846,849,850,851,852,855,865,866,867,871,906,908,909,918,921,925,926,932,935,936,937,944,945,947,948,952,953,954,987,990,994,995,1027,1037,1041,1047,1074,1081,1087,1088,1089,1090,1091,1172,1183],dev:[40,41,42,43,132,258,358,362,413,415,416,418,428,429,430,437,438,439,440,441,446,463,464,543,676,816,820,871,874,875,877,878,880,881,884,885,887,888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,910,911,912,913,914,915,916,917,920,945,948,952,980,981,988,998,999,1007,1008,1014,1015,1040,1041,1056,1147,1148,1149,1150,1151,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231],dev_clon:[40,41,871],dev_clone_arrai:871,dev_clone_it:871,dev_clone_nest:871,dev_dist:[40,41,871],dev_dist_arrai:871,dev_dist_it:871,dev_dist_nest:871,dev_from_str:[43,132,258,413,543,676,871],dev_mapp:871,dev_str:[40,41],dev_to_str:[132,258,413,543,676,871],dev_unifi:871,dev_unify_arrai:871,dev_unify_it:871,dev_unify_nest:871,dev_util:871,devclonedit:871,devcloneditem:871,devclonednest:871,devdistit:871,devdistitem:871,devdistnest:871,develop:[43,1191,1234,1237],deviat:[40,41,1147,1150,1154,1160,1189,1190,1222,1223],devic:[21,40,41,43,358,359,360,361,364,414,415,427,816,817,818,819,820,821,822,873,874,875,876,877,878,880,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,945,948,952,979,980,981,988,998,999,1007,1008,1014,1015,1040,1041,1056,1147,1148,1149,1150,1151,1191,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231],devmanag:[871,879],devmapp:[871,881],devmappermultiproc:871,diag:[849,853],diagon:[112,240,393,523,656,816,821,849,854,945,988],dict:[15,16,17,18,19,40,41,42,871,873,876,880,881,883,893,894,895,896,897,945,970,971,972,1000,1087,1088,1089,1091,1135,1137,1138,1139,1142,1144,1197,1198],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,823,824,871,890,891,894,895,1064,1069,1091,1172,1181,1191,1234,1237],differenti:[1191,1234],dilat:[1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],dim:[40,41,849,853,945,1007,1057,1058,1062,1091,1208,1219],dim_siz:[40,41,871,1091],dimens:[40,41,42,816,821,849,850,851,853,855,856,857,858,859,865,866,867,871,902,945,956,961,965,970,971,972,975,978,985,997,1007,1011,1012,1022,1023,1026,1034,1036,1057,1061,1064,1067,1087,1088,1089,1090,1091,1147,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1173,1174,1175,1176,1177,1178,1179,1182,1185,1187,1188,1208,1209,1210,1211,1212,1213,1214,1215,1218,1219],dimension:[40,41,463,849,851,853,855,865,866,867,945,1022,1023],direct:1091,directli:[43,1135,1144,1234,1237],directori:[945,1019,1030],discord:43,discret:[1185,1187],discuss:43,disk:[40,41,1057,1059],distanc:[945,948],distribut:[40,41,871,890,894,895,896,897,1091,1147,1148,1149,1150,1151,1172,1180,1208,1216,1220,1221],distribute_nest:1091,distributedarrai:[40,41],distrubt:[1185,1187],dive:[1191,1234],divid:[40,41,945,1022,1024,1074],dividend:[1074,1081],divis:[945,977,984,1017,1024,1025,1041,1043,1044,1048,1074,1081,1224,1225,1226],divisor:[1041,1043,1044,1048,1074,1081,1224,1225,1226],doc:1191,docstr:43,document:43,doe:[40,41,43,945,948,1022,1233],doesn:[1064,1069,1191],doing:43,domain:[827,828,829,832,833,838,840,844,845,846,847,1074,1075],don:[43,1191],done:43,door:1237,dot:[1064,1066,1172,1183,1184,1208,1219],down:1233,downscal:[945,959,960],drag:[1191,1237],draw:[1147,1148,1150,1151],drawn:[1147,1148,1149,1150,1151],drop:[1191,1237],dropout:[1172,1191,1208,1219],dropout_r:[1208,1219],ds_tune_step:871,dtype:[40,41,43,139,264,358,359,360,361,362,364,365,367,368,415,416,418,419,427,430,446,550,684,816,817,818,819,820,822,823,824,825,858,859,925,926,927,928,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,948,952,979,988,1007,1008,1040],dtype_bit:[139,264,415,550,684,921],dtype_from_str:[43,139,264,415,550,684,921],dtype_in:[415,424,425,426,921,927,932,933,934,935,936,937,944],dtype_to_str:[139,264,415,550,684,921],duplic:[40,41,43],dure:[40,41,43,849,851,869,870,945,1035,1041,1043,1044,1048,1087,1088,1089,1090,1220,1221,1224,1225,1226,1228],dynam:[43,415,420,869,870],each:[40,41,42,43,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,851,853,871,880,881,890,891,892,893,894,895,896,902,914,915,945,946,947,962,973,1011,1022,1026,1029,1039,1041,1044,1046,1048,1049,1050,1057,1060,1074,1076,1081,1083,1084,1091,1135,1139,1147,1148,1154,1155,1172,1173,1174,1175,1176,1177,1178,1179,1180,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1234],eager:1234,easi:1237,easili:1191,econom:1237,ecosystem:1191,edg:[945,958,962,1039],effect:[1041,1050],effective_grad:[1041,1050],effici:1237,einop:[40,41,945,970,971,972],einops_rearrang:[40,41,945],einops_reduc:[40,41,945],einops_repeat:[40,41,945],einstein:[40,41,1154,1155],einsum:[40,41,190,335,465,604,785,1154],either:[40,41,43,827,838,840,844,849,851,945,969,1000,1003,1005,1087,1088,1089,1090,1091,1208,1219,1220,1221,1234],eleg:1091,element:[40,41,463,816,818,821,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,851,856,857,863,864,865,866,867,871,892,896,902,921,925,945,946,948,950,951,953,954,958,959,960,966,967,973,976,977,988,989,1002,1004,1011,1013,1022,1033,1038,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1091,1154,1155,1157,1159,1161,1164,1165,1166,1167,1168,1169,1170,1171,1172,1180,1208,1216],elementwis:[40,41],elementwise_affin:[1222,1223],elementwise_funct:[827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847],elemtn:[1147,1148],elif:1091,els:[43,945,955,969,974,1091],elsewher:[945,1038],emphas:1191,empti:[40,41,77,215,358,488,621,816,865,866,867,1064,1069,1091],enabl:[40,41,42,43,1191],encapsul:[823,825],encod:[945,978,1057,1059],end:[945,948,1191,1234],engag:43,ensur:43,entir:[40,41,865,866,867,871,915,1091,1191,1208,1217],entri:[40,41,945,998,999,1022,1023],entropi:[1185,1186,1187,1188],enumer:1091,environ:1191,eps:[365,823,824],epsilon:[1041,1043,1044,1048,1185,1186,1187,1188,1189,1190,1222,1223,1224,1225,1226],equal:[40,41,89,370,500,633,816,818,827,834,849,850,861,862,945,947,953,954,962,1022,1039,1074,1085,1147,1151],equality_matrix:[945,947],equat:[40,41,1154,1155],equival:[827,841,842,849,855,945,948,1074,1085],erf:[461,767,1074],error:[40,41,43,871,945,1023,1074,1082,1091,1164,1165,1220,1221,1224,1228],etc:[40,41,43,871,916,945,948,952,980,981,988,998,999,1007,1008,1014,1015,1040,1091,1147,1148,1149,1150,1151,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1237],euclidean:[849,855],euler:815,evalu:[40,41,827,838,839,840,843,865,866,867,945,1003,1135,1136,1143],even:[43,1237],evenli:[40,41,945,948,998,999,1022],everi:[43,816,818,945,947,1237],exact:[40,41],exampl:[43,869,870,945,958,1026,1064,1069,1191,1233,1234,1237],example_input:[415,420,869,870],exc_tb:1091,exc_typ:1091,exc_val:1091,exce:[945,1004],except:[40,41,44,47,865,866,867,945,948,955,961,969,1035,1091],excess_s:1091,excit:[1191,1234],exclud:[59,61,945,948,1147,1151],exclus:[40,41,415,422,435,447,449,945,966,995,1041,1047,1147,1149],execut:[43,945,1035,1234],execute_with_gradi:[170,312,447,584,747,1041,1191,1233],exist:[40,41,945,969,1091,1191,1224,1228,1237],exp:[767,1074],expand:[40,41,945,975,978],expand_dim:[40,41,264,684,945,1091],expect:[945,949],explain:[43,1234],explicitli:[43,1208,1217,1219,1220,1221,1234],expon:[945,1025],exponenti:[1074,1082,1083],expos:[945,952,963],express:[827,832,844,945,1003],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1041,1045],eye:[1064,1066],fabian:1191,fabio:1191,factor:[849,853,871,880,913,914,915,1041,1043,1044,1048,1049,1091,1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215,1224,1225,1226,1227],fail:43,falck:1191,fall:[1220,1221,1224,1228],fallback_to_non_compil:[1220,1221,1224,1228],fals:[15,18,19,40,41,42,59,66,67,68,69,70,413,415,422,423,435,442,445,447,448,449,456,457,827,834,835,841,842,849,855,858,859,861,862,863,864,865,866,867,871,889,902,910,915,920,921,928,929,930,931,945,947,966,969,974,978,985,995,1000,1020,1022,1036,1038,1041,1044,1045,1046,1047,1048,1049,1050,1064,1067,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1154,1156,1157,1158,1159,1160,1161,1162,1197,1198,1220,1221,1224,1225,1226,1227,1228,1229],fan_in:1199,fan_mod:1199,fan_out:1199,far:[1135,1136,1143,1233],faster:[869,870],favourit:[1191,1233],feasibl:1237,feat_dim:[1172,1183,1184],fed:[871,915,1091],feed:[871,915,1091],few:43,field:1237,file:[40,41,43,945,1019,1030,1220,1221],filepath:[40,41],fill:[40,41,816,817,818,819,820,822,945,979,1008,1147,1149],fill_valu:[358,360,415,427,816,818,945,979],filter:[1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215,1237],filter_s:[1208,1209,1210],filter_shap:[1208,1211,1212,1213,1214,1215],find:[40,41,43,1237],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[84,85,221,222,365,366,495,496,628,629,823],finish:[1191,1237],finit:[827,834],first:[40,41,43,463,827,830,836,837,842,849,850,851,853,869,870,871,902,945,953,961,965,973,998,999,1026,1028,1041,1045,1087,1088,1089,1090,1091,1135,1136,1143,1147,1153,1154,1159,1161,1208,1219,1220,1221,1224,1228,1234,1237],firstlayersiren:[1191,1199],firstli:[1234,1237],fist:[871,915,1091],fit:[40,41,413,415,447,452,456,460,461,463,945,1011,1057,1062],fix:43,fkt:1237,flag:[40,41,43,1041,1047],flat:[40,41,945,1011,1014],flat_list:[40,41],flatten:[40,41,849,855,858,859,945,978,1011,1154,1156,1157,1158,1160,1162],flatten_key_chain:[40,41,1220,1221],flexibl:[1191,1234],flip:[40,41,119,246,400,530,663,856],float32:[43,415,430,921,925,933,934,945,948,952,988,1008,1040],float_dtyp:[921,929,939],float_img_to_uint8_img:1057,floor:[264,415,684,945,977,1091],floormod:[264,415,684,945],fluid:1237,folder:[43,1191],follow:[40,41,43,823,825,849,855,871,915,945,991,992,993,1024,1025,1041,1044,1046,1048,1049,1050,1091,1135,1139,1144,1172,1183,1184,1191,1208,1218,1224,1228],followng:[823,824],fomaml_step:1087,forget:[1041,1043,1044,1048,1224,1225,1226],fork:[945,1005,1191,1192],forkserv:[945,1005,1091],form:[15,16,17,18,19,40,41,816,821,849,850,945,952,1041,1044,1046,1048,1049,1050,1135,1137,1144,1172],format:[40,41,43,871,889,921,925,927,931,945,948,952,988,1008,1040,1091,1154,1155,1191,1233,1234],format_fn:[40,41],format_key_chain:[40,41],forward:[1220,1221,1224,1228,1233],found:[40,41,42],fourier:[945,978],fourier_encod:945,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,120,122,125,127,129,130,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,178,179,180,184,185,186,187,188,189,191,192,193,194,195,196,197,200,202,203,205,206,207,208,209,210,211,216,217,218,219,220,222,223,224,227,228,229,230,231,232,233,234,235,236,237,238,241,242,243,244,245,247,249,252,255,256,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,318,319,320,322,323,324,325,327,328,331,332,333,334,336,337,338,339,340,341,342,343,346,348,349,350,351,352,353,354,359,360,361,362,363,364,366,367,368,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,394,395,396,397,398,399,401,403,406,408,410,411,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,450,451,453,454,455,457,458,459,462,464,466,467,468,469,470,471,472,475,476,478,479,480,481,482,483,484,489,490,491,492,493,494,496,497,498,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,524,525,526,527,528,529,531,533,536,538,540,541,544,545,546,547,548,549,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,585,586,587,588,590,591,592,594,595,596,600,601,602,603,605,606,607,608,609,610,611,615,616,617,622,623,624,625,626,627,629,630,631,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,657,658,659,660,661,662,664,666,669,671,673,674,677,678,679,680,681,682,683,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,748,749,750,751,752,754,755,756,758,759,760,761,762,763,765,766,768,769,770,771,772,773,774,775,776,777,779,780,781,782,783,784,786,787,788,789,790,791,792,795,796,797,798,799,800,801,803,804,806,807,808,809,810,811,812,817,818,819,820,821,822,824,825,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,850,851,852,853,854,855,857,859,862,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1190,1191,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1236,1237],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1091,framewrk:[945,1005],free:43,freed:43,freeli:43,frequenc:[945,978],from:[40,41,42,43,816,818,820,827,846,849,850,856,857,863,864,865,866,867,871,880,881,915,921,927,945,969,980,981,988,1012,1023,1031,1038,1041,1044,1048,1057,1061,1064,1069,1087,1088,1089,1090,1091,1135,1137,1144,1147,1148,1149,1150,1151,1154,1159,1161,1172,1180,1183,1191,1197,1198,1208,1216,1219,1224,1228,1233,1234],from_cal:[1220,1221],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,139,264,415,550,684,823,824,945,1064,1069,1191],full_lik:[77,358,488,621,816],full_matric:[849,853],fulli:[43,1191,1208,1218,1219,1233],func:[40,41,415,420,447,448,869,870,871,915,945,957,1041,1045,1091],further:[43,1237],furthermor:1237,futur:1237,gain:1199,gamma:[1189,1190],gather:[40,41,139,264,415,550,684,945,981],gather_nd:[40,41,139,264,415,550,684,945],gauss:[1074,1082],gaussian:[1164,1165],geglu:[1191,1194],gelu:[345,474,794,1164,1191,1194],gener:[23,40,41,43,413,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,463,869,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1047,1147,1149,1151,1152,1191,1224,1228],geometr:[945,978],get:[40,41,43,823,824,825,871,880,881,889,904,905,910,914,917,920,921,931,932,945,949,982,983,984,1010,1091,1191,1208,1217,1237],get_all_arrays_in_memori:945,get_all_arrays_on_dev:871,get_framework:59,get_initial_st:[1208,1217],get_min_bas:945,get_min_denomin:945,get_mod_kei:[1220,1221],get_num_dim:[415,684,945],get_referrers_recurs:945,getfullargspec:1091,gist:1191,give:[43,945,1012,1234],given:[40,41,43,816,817,856,857,871,904,910,913,914,915,917,920,921,925,945,948,952,958,966,967,981,998,999,1008,1011,1014,1015,1022,1029,1034,1036,1040,1041,1043,1044,1046,1048,1049,1050,1064,1066,1070,1074,1075,1091,1135,1140,1141,1147,1150,1151,1153,1154,1157,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1197,1198,1237],global:[40,41,42,871,880,881,888,913,914,915,921,928,929,930,945,968,983,984,1010,1016,1017,1018,1024,1025,1041,1056,1091,1189,1190,1222,1223],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1191,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218],good:43,googl:1191,got:[43,1191],gpu0:43,gpu2:43,gpu:[871,906,909,1091],gpu_is_avail:[413,871,1091],grad:[1191,1224,1228,1233],gradient:[25,40,41,448,449,450,451,871,915,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1060,1087,1088,1089,1090,1191,1224,1225,1226,1227,1228,1229,1233,1237],gradient_descent_upd:[1041,1087,1088,1089,1090],gradient_imag:[173,317,452,589,753,1057],gradienttrack:[1041,1042],graph:[1041,1044,1046,1048,1049,1050,1220,1221],greater:[40,41,945,948,976,1023,1147,1151],green:[40,41,42,1235,1236],grid:[945,1003],group:[1057,1062],guid:[43,1191,1192,1237],gym:1191,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1237,half:[945,948,1091,1147,1151],hand:1191,handl:[40,41,42,43,869,870,871,887,889,898,899,910,917,920,1041,1044,1046,1048,1049,1050,1091,1224,1225,1226,1227,1228,1229],happen:43,has:[40,41,43,849,851,852,858,859,945,1026,1064,1069,1074,1077],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,945],hasattr:1091,have:[40,41,43,816,817,818,819,820,821,822,823,824,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,844,845,846,847,849,850,851,853,855,856,857,858,859,861,862,865,866,867,945,961,965,970,971,972,973,979,1026,1041,1047,1055,1074,1081,1091,1191,1233,1234],haven:43,hdf5:[40,41,1220,1221],head:[1172,1183,1208,1219],head_dim:[1208,1219],height:[1057,1062],height_cutoff:[40,41],help:[43,59,365,413,414,871,883,884,885,886,921,1041,1191,1199,1201,1202,1204,1205,1207],here:[43,1191],hidden:[1172,1182,1208,1217],hierarch:[945,963],hierarchi:[40,41],high:[40,41,463,1147,1149,1151],higher:[849,853,1041,1044,1046,1048,1049,1050],highest:[1147,1149],highest_util:1091,highest_util_nod:1091,highli:1191,highlight:1237,hint:43,hkt:1237,hold:[921,925,945,948,952,1014,1015],host:1191,hot:[945,1007],how:[1191,1208,1219,1220,1221,1234,1237],howev:[43,1234],http:1237,hyperbol:[827,828,829,833,845,847,1074,1079,1080,1086,1164,1171],hypothet:[43,1237],icon:1191,idea:1191,ident:[40,41,43,139,264,415,550,684,945],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[815,823,824,827,846],if_exist:[40,41],ignor:[40,41,1224,1228],ignore_key_error:[40,41],ignore_miss:[1224,1228],ignore_non:[40,41],iii:43,iinfo:[84,221,365,495,628,823],imag:[27,453,454,455,945,997,1058,1059,1060,1061,1062,1063,1172,1173,1174,1175,1176,1178,1179,1191,1237],image_dim:[1057,1061],imkkhk:1237,immedi:[1191,1234,1237],implement:[43,827,828,829,832,833,838,839,840,844,845,847,861,862,1191,1234,1237],in_featur:[1172,1181],inadvert:43,includ:[40,41,43,849,855,865,866,867,945,948,987,1024,1025,1037,1135,1136,1147,1151,1208,1218,1219,1222,1223,1233],include_deriv:[1135,1137,1144],include_empti:[40,41],include_inf:[40,41,945,987,1037],include_nest:[1135,1136],include_self:[40,41],inclus:[43,1147,1149],incom:[1172,1181],increas:[871,893,897,903,945,962,975,1039,1091,1135,1144],increasingli:1237,increment:[945,992,1091],inde:1191,indent:[40,41,42],independ:[1147,1148],index:[40,41,415,463,858,859,861,862,945,950,951,980,981,1003,1023,1026,1135,1138,1140,1141,1142,1145],index_nest:1135,indic:[40,41,415,428,429,439,440,441,849,855,858,859,861,862,945,950,951,980,981,989,1007,1014,1015,1135,1136,1138,1140,1141,1142,1143,1145,1146,1147,1148,1164,1169,1172,1173,1174,1175,1176,1177,1178,1179,1189,1190,1208,1209,1210,1211,1212,1213,1214,1215,1220,1221],indices_wher:[139,264,415,684,945],indistinguish:[827,846],inevit:1237,inf:[40,41,849,855,945,987,996,1037,1074,1077],infer:[816,818,820,863,864,869,870,945,985,988,1012,1020,1057,1061,1064,1069,1234,1237],infin:[827,828,829,831,832,833,834,838,840,844,845,846,847,849,855,865,866,867,945,996],infinit:[827,846],inform:[823,824,825,1041,1052],init_c:[1172,1182],init_h:[1172,1182],init_on_first_step:[1224,1228],initi:[40,41,42,43,59,365,413,414,871,883,884,885,886,921,1041,1091,1172,1182,1191,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1224,1228],initialz:[1220,1221],inner:[849,851,1087,1088,1089,1090],inner_batch_fn:[1087,1088,1089],inner_batch_shap:[1172,1181],inner_cost_fn:[1087,1088,1089],inner_grad_step:[1087,1088,1089,1090],inner_learning_r:[1087,1088,1089,1090],inner_optimization_step:[1087,1088,1089,1090],inner_v:[1087,1088,1089],innermost:[816,821,849,850],inp:1091,inplac:[40,41,945,955,990,994,1027,1041,1044,1046,1048,1049,1050,1197,1198,1224,1225,1226,1227,1228,1229],inplace_arrays_support:[415,945],inplace_decr:[139,264,415,550,684,945],inplace_incr:[139,264,415,550,684,945],inplace_oper:[0,11,12],inplace_upd:[40,41,139,264,415,550,684,945,1197,1198],inplace_variables_support:[415,945],input:[15,18,19,40,41,42,43,816,818,820,821,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,853,855,856,857,858,859,861,862,863,864,865,866,867,869,870,871,880,881,888,889,890,893,894,897,903,915,916,921,925,926,928,929,930,931,932,936,937,945,946,947,950,951,953,954,955,956,958,959,960,961,962,964,966,967,969,970,971,972,973,974,975,976,977,978,985,987,988,989,991,992,993,995,996,997,1001,1002,1003,1004,1011,1013,1020,1021,1023,1026,1027,1028,1029,1031,1032,1033,1034,1036,1037,1039,1041,1045,1047,1052,1056,1057,1058,1059,1060,1061,1063,1064,1067,1069,1071,1072,1073,1074,1077,1079,1080,1081,1085,1086,1087,1088,1089,1090,1091,1147,1148,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1189,1190,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222,1223,1234],input_ax:[871,915,1091],input_channel:[1208,1209,1210,1211,1212,1213,1214,1217,1218],input_queu:1091,inputs_split:1091,insert:[858,859,945,975],insid:43,inspect:1091,inspir:1237,instal:1191,instanc:[15,16,17,18,19,40,41,43,463,871,880,1091,1197,1198,1230,1231],instead:[40,41,43,463,1154,1156,1157,1158,1159,1160,1161,1162,1237],int32:43,int64:[921,925,945,948,952,988,1008,1040],int_dtyp:[921,930,940],integ:[40,41,463,823,825,827,830,831,849,855,865,866,867,921,937,945,948,976,1013,1022,1147,1149,1152],integr:1191,intend:43,inter:1191,interact:1191,interchang:[40,41,945,1028],interest:1191,interfac:[945,952,1234],intermedi:[40,41],intern:[40,41,871,1041,1055,1091,1135,1136,1143,1144,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1230,1231],interpol:[945,997],intersect:[1074,1075],interv:[40,41,865,866,867,945,948,958,998,999,1074,1076,1147,1151],introduc:1237,inv:[757,1064,1237],invalid:[865,866,867],invalid_dtyp:921,invers:[827,828,829,1064,1066,1068,1074,1075,1076,1077,1079,1237],invert:[1064,1066,1068],invest:1237,investig:43,invoc:[869,870],irrespect:1191,is_al:1091,is_arrai:[139,264,415,550,684,945,1091],is_float_dtyp:921,is_int_dtyp:921,is_mean:1091,is_sum:1091,is_vari:[170,312,447,584,747,1041],isfinit:[89,226,370,500,633,827],isinf:[264,550,684,945],isinst:1091,isnan:[89,226,370,500,633,827],isnumer:1091,issu:[1191,1192],issue_numb:43,item:[15,19,40,41,871,880,881,883,890,892,894,896,902,921,928,945,963,986,1024,1025,1091,1135,1139,1140,1141,1144,1145,1146,1191,1220,1221,1233],iter:[15,16,17,18,19,40,41,42,869,870,871,874,875,877,878,880,881,884,885,892,894,895,896,897,902,915,945,947,956,961,962,988,1003,1008,1011,1012,1015,1020,1022,1026,1029,1034,1039,1091,1135,1136,1137,1139,1143,1144],iterbal:[871,892,896,902,1091],its:[463,849,851,871,915,945,988,1012,1028,1034,1091,1191],itself:[1135,1144],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,358,359,360,361,362,363,364,365,367,368,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,866,867,869,870,871,873,874,875,876,877,878,880,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1235,1236],ivy_backend:[40,41],ivy_bay:1237,ivy_test:43,ivyfcmodel:1233,ivyh:[40,41,42],ivymodul:[201,802],jame:1191,jax:[43,1041,1047,1191,1237],jax_concat:1191,jnp:1191,join:[40,41,945,961,1026,1091],journal:1191,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1191,1208,1217,1237],kaimingnorm:[1199,1203],kalman:1237,kalman_filt:1237,kalman_filter_step:1237,kalman_filter_upd:1237,keep:[40,41,871,916,945,1036,1091,1191,1192,1237],keep_inner_v:[1087,1088,1089],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1087,1088,1089],keepdim:[40,41,415,445,456,457,849,855,858,859,863,864,865,866,867,945,1036,1064,1067,1154,1156,1157,1158,1159,1160,1161,1162],kei:[15,16,17,40,41,42,43,871,883,945,963,1087,1088,1089,1091,1135,1138,1142,1172,1183,1184,1191,1197,1198,1208,1219,1224,1228],kept:[40,41,42,1087,1088,1089],kera:1237,kernel:[1172,1182],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,871,880,881,893,897,903,945,949,970,971,972,1000,1091,1135,1139,1220,1221],keyword_color_dict:[40,41,42],kind:[823,824,825,1237],kwarg:[15,16,17,40,41,42,59,63,871,880,893,897,903,945,1000,1091,1197,1198,1220,1221],kwarg_stateful_idx:[1220,1221],kwargs_clon:1091,kwargs_dist:1091,kwargs_uni:1091,label:[43,1185,1186,1187,1188],lamb:[1041,1048,1191,1224],lamb_upd:1041,lambda:[1091,1224,1227,1229,1233],lar:[1041,1048,1049,1191,1224],larger:[823,824,945,958],largest:[40,41,823,824,825,945,950,976],lars_upd:1041,last:[40,41,849,850,853,856,857,861,862,865,866,867,945,948,965,997,1022,1026,1064,1067,1154,1159,1161,1164,1169,1172,1182,1208,1218],later:[40,41,945,957],latest:[1208,1217],layer:[1041,1044,1046,1048,1050,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1189,1190,1191,1199,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1237],layer_norm:1189,layernorm:[1191,1222],layerwis:[1041,1049,1224,1227],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1135,1136,1143],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1164,1165,1166],leaky_relu:[794,1164],learn:[863,864,1041,1044,1046,1048,1049,1050,1064,1069,1087,1088,1089,1090,1147,1153,1191,1224,1225,1226,1227,1228,1229,1234,1237],learnabl:[1189,1190,1222,1223],least:[43,849,851],leav:[15,18,19,40,41,1135,1136,1137,1143,1144],left:[40,41,43,858,859,1064,1067,1154,1156,1157,1158,1159,1160,1161,1162,1191],leftmost:[40,41],len:1091,length:[40,41,42,945,948,1012,1023,1034],lenton2021ivi:1191,lenton:1191,less:[40,41,43,89,226,370,500,633,827,828,831,838,840,846,849,855,1091,1147,1151],less_equ:[89,370,500,633,827],less_util_node_str:1091,let:[1234,1237],level:1191,librari:[827,841,842,1191,1233,1237],lightweight:1191,like:[43,1041,1047,1147,1151,1191,1233,1234,1237],likewis:43,limit:[40,41,42,43,823,824,825,945,958,959,960],linalg:[29,1065,1066,1067,1068,1069,1070,1191],line:43,linear0:[1191,1233],linear1:1191,linear2:1233,linear:[945,978,997,1064,1164,1165,1166,1167,1172,1180,1191,1208,1209,1210,1211,1212,1213,1214,1215,1233],linear_algebra:[456,457,458,459,849,850,851,852,853,854,855],linear_resampl:[139,264,415,550,684,945],linearli:[945,978],link:[43,1191],linspac:[139,264,415,550,684,945,948],list:[15,18,19,40,41,358,359,361,364,816,817,819,822,856,857,865,866,867,871,880,881,890,891,893,894,895,897,900,901,915,945,948,952,954,1003,1021,1022,1031,1036,1087,1088,1089,1091,1135,1136,1137,1139,1143,1144,1172,1173,1174,1175,1176,1177,1178,1179,1191,1192,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215],list_join:[40,41,42],list_stack:[40,41],liter:[849,855],littl:1234,load:[40,41],loaded_kwarg:1091,loader:1191,local:43,local_set:[945,986],locat:[43,945,996,1147,1148],log10:[89,370,500,633,827],log1p:[89,370,500,633,827],log2:[89,370,500,633,827],log:[767,827,839,849,852,945,999,1074,1091,1185,1186,1187,1188],logarithm:[827,838,839,840,849,852,1074,1084],logdet:[849,852],logic:[31,827,841,842,865,866,867,1072,1073,1191],logical_and:[326,764,1071],logical_not:[89,226,370,500,633,827],logical_or:[89,326,370,500,633,764,827,1071],logit:[1185,1188],logspac:[139,264,415,550,684,945],look:[43,1234,1237],loop:[1087,1088,1089,1090],loss:[1186,1187,1188,1191,1233],loss_fn:[1191,1233],lot:1234,low:[40,41,463,1147,1149,1151],lower:[40,41,43,816,821,945,1002,1147,1151],lower_depth:[1220,1221],lowest:[15,18,19,40,41,1135,1144,1147,1149],lstm:[1172,1182,1191,1208],lstm_updat:[43,1172],machin:[823,824,825,863,864,1064,1069,1147,1153,1191,1234,1237],made:43,mai:[827,837,841,842,861,862,945,948,969,973,1191,1234,1237],main:[816,821,849,850,945,988,1191],mainli:1191,maintain:[43,861,862],make:[43,463,871,1091,1191,1234],maml:[1087,1088,1089],maml_step:1087,manag:[871,1091],manhattan:[849,855],mani:[40,41,43,945,1022,1191],manipulation_funct:[856,857],manner:[15,18,19,40,41,43,1135,1144],manual:[1135,1136,1143,1237],map:[40,41,42,871,880,945,996,1091,1135,1140,1141,1144,1208,1219,1233],map_cont:[40,41],map_nest_at_index:1135,map_nest_at_indic:1135,map_sequ:[40,41],mapper:[871,880,881,1091],mark:43,mask:[1172,1183,1184],master:43,match:[40,41,945,1000],match_kwarg:945,math:[33,462,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1091,1191],mathbb:[1064,1070],mathbf:[1064,1070],mathemat:[815,849,855],matmul:[43,112,264,393,523,656,849,945,1237],matplotlib:1234,matric:[816,821,849,850,1172,1181],matrix:[40,41,816,821,849,850,851,945,947,959,1001,1064,1065,1066,1067,1068,1069,1070,1172,1181,1208,1218],matrix_norm:[40,41,177,321,456,593,757,1064],matter:1191,max:[40,41,365,823,824,825,945,959,960,971,1002,1014,1015,1091,1154,1156,1224,1226],max_batch_s:[40,41],max_chunk_s:[871,915,1091],max_depth:[40,41,871,875,878,885,893,897,903,945,986,1091,1135,1144],max_dev_dim_step_ratio:871,max_freq:[945,978],max_length:[40,41],max_node_dim_step_ratio:1091,max_norm:[40,41,945,959,960],max_split_factor_step_s:[871,1091],max_trust_ratio:[1041,1048,1224,1226],maxim:[1191,1234,1237],maximis:1191,maximum:[40,41,42,684,858,859,871,893,897,903,915,945,950,958,959,960,978,1041,1048,1091,1135,1144,1154,1156],mayb:[15,18,19],mdi:1091,mean:[40,41,463,871,900,901,902,903,915,945,971,1087,1088,1089,1090,1091,1135,1139,1147,1150,1154,1157,1160,1162,1199,1233,1237],measur:[1172,1183,1208,1219],mech:1191,mechan:[1191,1237],medic:1237,member:43,memori:[871,887,910,915,917,920,1091,1172,1182,1191],mention:43,merg:43,merge_with_upstream:43,meshgrid:[264,415,684,945],messag:[1235,1236],meta:[35,1088,1089,1090,1191],method:[40,41,42,43,463,945,952,963,1003,1014,1015,1041,1048,1049,1091,1135,1136,1143,1144,1191,1208,1219,1220,1221,1234],might:[945,969,1237],min:[40,41,126,365,407,537,670,823,824,825,849,855,863,945,971,1004,1014,1015,1024,1064,1069,1091,1154,1158],min_bas:[945,1025],min_denomin:[945,1024],min_dev_dim_s:871,min_node_dim_s:1091,min_sf_tune_step:[871,1091],min_unit_dev_tune_step:871,min_unit_node_tune_step:1091,mind:1191,mini:[1189,1190,1222,1223],minimum:[40,41,684,863,864,871,921,925,945,948,951,952,958,983,984,1016,1017,1024,1025,1091,1154,1158],miss:[1224,1228],ml_framework:[945,948,1064,1069],mod:[945,977],mod_depth:[1220,1221],mod_height:[1220,1221],mod_with_top_mod_key_chain:[1220,1221],mode:[40,41,456,458,849,853,869,870,871,900,901,902,903,915,1064,1069,1091,1234],model:[1191,1233],modul:[40,41,42,59,945,1005,1091,1191,1192,1194,1195,1196,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222,1223,1230,1231,1237],moment:[1041,1043,1044,1048,1224,1225,1226],more:[43,849,851,856,857,945,1026,1091,1191,1234,1237],more_util_node_str:1091,most:[40,41,1064,1069,1191,1237],move:[40,41,43,871,916,1091],much:[43,1191,1237],multi:[463,945,1005,1172,1183,1208,1219],multi_head_attent:1172,multi_index_nest:1135,multi_map:[40,41],multi_nod:1091,multidev:[871,882,883,884,903],multidevcontain:[40,41],multidevic:[871,880],multidevit:[871,874,877,880,881,885],multidevitem:[871,873,876],multidevnest:[871,875,878],multiheadattent:[1191,1208],multinod:[1091,1095],multinodecontain:1091,multinodeit:1091,multinodeitem:1091,multinodenest:1091,multinomi:[183,330,463,599,778,1147],multipl:[40,41,865,866,867,945,1000,1022,1064,1066,1154,1156,1157,1158,1159,1160,1162,1189,1190,1208,1218,1234],multipli:[40,41,945,966,1154,1159],multiprocess:[40,41,42,415,684,871,880,945,1091],must:[40,41,42,43,816,817,818,819,820,821,822,827,828,829,830,831,832,833,834,836,837,838,840,841,842,844,845,846,847,849,850,851,855,856,857,861,862,863,864,865,866,867,871,900,901,902,903,915,945,948,961,963,965,973,1002,1004,1015,1026,1074,1078,1081,1091,1147,1152,1224,1228],mutabl:[1135,1137,1144],mutlidevic:[871,880],mutlinod:1091,mw_tm1:[1041,1044,1048],mx_concat:1191,mxn:[816,821,849,850],mxnet:[1191,1237],my_func:43,mymodel:1191,name:[43,869,870,1233],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1234],nan:[40,41,43,815,827,828,829,831,832,833,834,835,838,840,844,845,846,865,866,867,945,987,1037],nativ:[15,17,18,19,40,41,43,871,887,889,898,899,910,917,920,921,926,933,934,1091,1191,1192,1197,1198],native_modul:[1197,1198],native_module_class:[1197,1198],nativearrai:[15,18,19,43,816,818,820,821,823,824,825,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,851,852,853,855,856,857,858,859,861,862,863,864,865,866,867,871,889,915,916,921,925,931,936,937,945,946,947,948,950,951,952,953,954,956,958,959,960,961,962,964,965,966,967,970,971,972,973,975,976,977,978,980,981,985,987,988,989,996,997,998,999,1001,1002,1003,1004,1007,1008,1011,1012,1013,1014,1015,1020,1022,1023,1026,1028,1029,1031,1032,1033,1034,1036,1037,1038,1039,1040,1091,1135,1137,1144],natur:[827,839,849,852,1074,1084,1237],ncdhw:[1172,1177,1178,1208,1213,1214],nchw:[1172,1175,1176,1179,1208,1211,1212,1215],ncw:[1172,1173,1174,1208,1209,1210],ndarrai:[358,359,360,361,362,363,364,365,367,368,463,945,1032],ndhwc:[1172,1177,1178,1208,1213,1214],nearest:[945,1013],need:[43,945,959,960,1172,1174,1176,1178,1191,1208,1210,1212,1214,1237],neg:[40,41,89,226,370,500,633,827,834,849,855,856,857,865,866,867,1154,1159,1161,1164,1166],negative_slop:1199,neither:1091,nest:[15,16,17,18,19,40,41,42,871,893,897,903,945,952,1031,1087,1088,1089,1091,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1220,1221,1224,1225,1226,1227,1228,1229],nested_indices_wher:1135,nested_map:[1091,1135],network:[1172,1181,1191,1192,1194,1208,1220,1221,1237],neural:[1172,1191,1194,1208,1233],never:43,new_node_percent_mem:1091,new_node_util:1091,new_node_utils_kei:1091,new_std:[1189,1190,1222,1223],newli:[43,869,870,945,956,957],newlin:[40,41,42],newshap:[945,956,1012],next:[823,824,1091,1220,1221,1224,1225,1226,1227,1228,1229],nhwc:[1172,1175,1176,1179,1208,1211,1212,1215],node:[40,41,1135,1136,1143],node_clon:1091,node_dist:1091,node_dist_arrai:1091,node_dist_it:1091,node_in:1091,node_mapp:1091,node_str:1091,node_to_str:1091,node_util:1091,nodedistit:1091,nodedistitem:1091,nodedistnest:1091,nodemanag:[1091,1102],nodemapp:1091,nodemappermultiproc:1091,noinspect:[872,922,923,924,1042,1091],non:[40,41,827,841,842,849,855,865,866,867,869,870,921,935,1220,1221,1224,1228,1234],none:[40,41,42,43,59,61,64,358,359,360,361,362,364,413,415,416,418,420,427,428,429,430,437,438,439,440,441,442,443,444,446,456,457,463,464,816,817,818,819,820,822,823,824,825,849,855,856,857,858,859,863,864,865,866,867,869,870,871,880,881,887,888,913,914,915,916,921,928,929,930,945,948,952,968,969,974,979,980,981,986,988,990,991,992,993,994,998,999,1005,1007,1008,1011,1014,1015,1016,1017,1022,1023,1024,1025,1034,1035,1040,1041,1044,1046,1048,1049,1050,1056,1057,1061,1064,1067,1069,1087,1088,1089,1090,1091,1135,1136,1139,1143,1144,1147,1148,1149,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1172,1174,1176,1178,1181,1182,1183,1184,1189,1190,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],norm:[40,41,849,855,945,959,960,1064,1067,1190,1191,1223,1224,1226],normal:[1147,1150,1189,1190,1222,1223],normalized_idx:[1189,1190],normalized_shap:[1222,1223],notat:[40,41,1154,1155],note:[43,1064,1069],noth:[40,41,1234],notimplementederror:1091,now:[40,41,43,871,916,945,946,1091,1191,1208,1219,1220,1221,1233,1234,1237],np_concat:1191,np_finfo:365,ns_tune_step:1091,num:[415,437,438,945,998,999],num_arrai:[40,41],num_arrays_in_memori:945,num_arrays_on_dev:871,num_band:[945,978],num_channel:[1208,1215],num_chunk:1091,num_chunks_floor:1091,num_class:[1147,1148],num_cpu_cor:871,num_gpu:[132,413,871,1091],num_head:[1172,1183,1208,1219],num_kei:[1172,1183,1184],num_lay:[1208,1217],num_or_size_split:[40,41,415,442,945,1022],num_output:1091,num_queri:[1172,1183,1184],num_sampl:[415,436,463,464,945,997,1057,1058,1147,1148],num_task:[1087,1088,1089,1090],number:[40,41,42,815,823,824,825,827,831,849,852,853,865,866,867,869,870,871,907,908,909,921,932,936,937,945,948,958,962,975,978,985,988,997,998,999,1002,1006,1011,1022,1029,1033,1037,1039,1087,1088,1089,1090,1091,1147,1148,1152,1154,1156,1157,1158,1160,1162,1172,1183,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1234,1237],numer:[43,827,831,834,835,836,841,842,843,849,851,945,983,984,1016,1017,1024,1025,1074,1081,1199],numhead:[1172,1183],numpi:[40,41,43,358,359,360,361,362,363,364,365,367,368,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,849,853,945,1032,1064,1069,1154,1155,1191,1233,1234,1237],nwc:[1172,1173,1174,1208,1209,1210],obj:[40,41],object:[40,41,42,59,365,823,824,871,921,925,945,948,952,1041,1135,1138,1140,1141,1142,1145,1146,1147,1153,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1220,1221],object_in:[415,418,945,952],observ:1091,obvious:43,occupi:[823,824,825,945,1014,1015],off:[849,850,945,948],offer:1191,offset:[849,850,854,1189,1190],often:1234,old:[40,41],on_init:[1208,1219,1220,1221],onc:[43,871,915,1091,1147,1148,1191],one:[40,41,43,849,851,855,856,857,858,859,871,900,901,902,903,915,921,927,945,988,1000,1007,1014,1015,1023,1026,1064,1067,1091,1154,1155,1156,1157,1158,1159,1160,1161,1162,1191,1234,1237],one_hot:[139,415,550,684,945],onearrai:[945,975],ones:[40,41,77,215,358,488,621,816,820,945,988,1007,1191],ones_lik:[77,215,358,488,621,816],ongo:43,onli:[40,41,43,463,827,841,842,849,851,856,857,871,1064,1069,1091,1135,1136,1137,1143,1224,1225,1226,1227,1228,1229,1233,1234],onlin:[43,1191],onto:[871,900,901,916,1091,1135,1139,1144],oom:[871,1091],open:[945,948,1147,1151,1191,1237],opencv:1234,oper:[40,41,43,945,955,970,971,972,998,999,1027,1041,1044,1046,1048,1049,1050,1071,1072,1073,1172,1173,1174,1175,1176,1177,1178,1179,1181],operand:[40,41,827,828,829,831,832,833,838,840,844,845,846,1154,1155],oppos:[945,978],optim:[871,1041,1044,1046,1048,1049,1050,1087,1088,1089,1090,1091,1191,1225,1226,1227,1229,1233,1237],optimizer_upd:1041,option:[15,18,19,40,41,42,43,358,359,360,361,362,364,816,817,818,819,820,822,849,855,856,857,858,859,863,864,865,866,867,869,870,871,880,881,889,893,894,895,896,897,900,901,902,903,910,913,914,915,916,920,921,926,931,935,944,945,947,948,950,951,952,959,960,961,966,968,969,978,979,980,981,985,987,988,995,997,998,999,1000,1003,1005,1007,1008,1011,1014,1015,1018,1020,1022,1023,1024,1025,1026,1034,1036,1037,1040,1041,1044,1046,1047,1048,1049,1050,1052,1057,1061,1064,1067,1069,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1169,1172,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1234],ord:[849,853,855],order:[40,41,42,43,849,855,856,857,861,862,1041,1044,1046,1048,1049,1050,1064,1067,1087,1088,1089,1230,1231],ordered_node_util_kei:1091,org:1237,organ:43,origin:[40,41,42,945,1012,1040,1064,1067],other:[40,41,43,869,870,945,947,948,988,1041,1045,1147,1151,1191,1233,1234,1237],otherwis:[15,16,17,18,19,40,41,827,834,835,849,855,858,859,865,866,867,871,888,921,928,929,930,945,955,1034,1035,1038,1041,1047,1052,1056,1087,1088,1089,1091,1154,1156,1157,1158,1160,1162],our:[43,1191,1237],out:[43,463,816,818,819,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,844,845,846,849,850,851,852,854,855,856,857,858,859,861,862,865,866,867,945,948,1074,1077,1172,1180,1182,1191,1208,1216],out_feat_dim:[1172,1183],out_featur:[1172,1180,1181],out_i:[827,834,835],outdat:1237,outer:[1087,1088,1089,1090],outer_batch_fn:[1087,1088,1089],outer_batch_shap:[1172,1181],outer_cost_fn:[1087,1088,1089],outer_v:[1087,1088,1089],outlin:1234,output:[40,41,43,816,817,818,819,820,822,856,857,871,880,881,915,945,948,957,979,988,1011,1029,1041,1045,1074,1078,1091,1147,1149,1150,1151,1172,1174,1176,1178,1180,1182,1183,1184,1191,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219],output_ax:[871,915,1091],output_axi:1091,output_channel:[1208,1209,1210,1211,1212,1213,1214,1217,1218],output_queu:1091,output_shap:[1172,1174,1176,1178,1208,1210,1212,1214],outsid:[945,958],over:[40,41,849,855,865,866,867,1064,1067,1147,1151,1154,1156,1157,1158,1160,1162,1189,1190,1222,1223],overal:1234,overflow:[945,948],overhead:1234,overrid:[945,1007,1040],overriden:[1224,1228],overwrit:[40,41,871,915,1091],overwrite_at_key_chain:[40,41],own:[1191,1234,1237],packag:[43,1234],pad:[945,962,978,1039,1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],pad_width:[415,945,962,1039],page:1191,pair:[1172,1184],parallel:[871,880,881,1091],parallelis:[871,880,881,1091],param:[40,41,42,415,428,429,816,817,820,858,859,863,864,871,915,945,946,980,981,1007,1008,1091,1220,1221,1233],paramet:[15,16,17,18,19,40,41,42,43,816,817,818,820,827,837,843,847,849,850,853,863,864,869,870,871,880,881,887,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,910,913,914,915,916,917,920,921,925,926,927,931,932,933,934,935,936,937,944,945,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,964,965,966,967,969,970,971,972,973,974,975,976,977,978,979,980,981,985,987,988,989,991,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1008,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1052,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233],parameter:[1147,1150,1151],pardo:1191,pars:[945,963],part:[816,821,1041,1044,1046,1048,1049,1050,1074,1077,1191,1220,1221,1234],partial:[40,41,43,1220,1221],particl:1237,particular:[43,1237],pass:[40,41,42,43,871,880,915,921,926,945,957,1041,1055,1087,1088,1089,1091,1197,1198,1220,1221,1224,1228,1230,1231],pattern:[40,41,945,970,971,972],peopl:43,per:[871,1091,1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],percent_used_mem_on_dev:871,percent_used_mem_on_nod:1091,percentag:[871,910,1091],perf_count:1091,perform:[40,41,43,865,866,867,871,945,950,951,966,970,971,972,991,992,993,997,998,999,1041,1044,1046,1048,1049,1050,1057,1058,1087,1088,1089,1090,1091,1135,1140,1141,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1180,1182],period:43,permissable_step:1091,permit:43,permut:[463,945,1028,1034],perpendicular:[945,965],person:[43,1191],physci:1237,pickl:[40,41,1091],pickle_filepath:[40,41],pinv:[321,757,1064],pip:1191,pipelin:1233,pkk:1237,pkkm1:1237,pkm1km1:1237,place:[40,41,43,816,817,818,819,820,822,871,916,945,975,979,991,992,993,1091,1224,1225,1226,1227,1228,1229],placehold:[43,1135,1144],pleas:[43,463,1064,1069],point:[43,815,816,817,819,822,823,824,827,828,829,831,832,833,838,840,844,845,846,847,849,855,921,936,945,948,1074,1081],popul:[40,41,1147,1148],popular:1237,population_s:[463,464,1147,1148],portabl:[1191,1192],posit:[15,16,17,823,824,827,834,865,866,867,871,893,897,903,945,946,948,975,978,1091,1147,1152,1197,1198],possibi:[40,41],possibl:[43,945,1000,1031,1057,1062,1237],post:[1189,1190],post_shap:[40,41],power:[945,983,1016,1025,1199],practic:1191,pre:[871,1091,1191],pre_shap:[40,41],precis:[823,824,827,846],pred:[1185,1186,1187,1188],predict:[1185,1186,1187,1188,1237],prepend:[849,851],preprint:1191,present:[40,41],preserv:[40,41,42,856,857,1041,1052],preserve_typ:[40,41,447,450,1041,1052],press:1191,prevent:[43,1041,1043,1044,1048,1091,1224,1225,1226],prevet:43,previou:[1041,1044,1048],previous:[945,957],prime:1191,print:[40,41,42,871,911,945,1009,1191,1233],print_all_arrays_in_memori:945,print_all_arrays_on_dev:871,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1224,1228],prob:[463,464,1147,1148,1172,1180,1208,1216],probabl:[1147,1148,1172,1180,1208,1216],problem:[43,1237],process:[43,871,880,881,910,920,945,1005,1091],process_specif:[871,910,920,1091],prod:[40,41,945,971],produc:[871,880,881,1091],product:[40,41,849,851,945,965,966,1001,1154,1155,1172,1183,1184,1208,1219],profil:[132,258,413,543,676,871,1091],progress:43,project:[1191,1233,1234,1237],promot:[827,828,829,830,832,833,838,840,844,845,846,849,851,855,1074,1081],prompt:1191,properti:[40,41,365,871,883,1091,1220,1221,1224,1225,1226,1227,1229],provid:[40,41,43,856,857,858,859,865,866,867,869,870,871,888,921,928,929,930,935,944,945,969,1007,1015,1040,1041,1044,1046,1048,1049,1050,1056,1091,1191,1208,1217,1224,1225,1226,1227,1228,1229,1234],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1064,1068],pull:[1191,1192],pure:[40,41,1191,1237],purpos:[43,1237],put:1091,pybroadexcept:1091,pyprotectedmemb:1091,pyshadowingnam:[872,922,923,924,1042,1091],python:[40,41,871,910,920,945,948,1091,1191],pytorch:[1041,1044,1046,1048,1049,1050,1064,1069,1191,1224,1225,1226,1227,1228,1229,1233,1234,1237],pyunresolvedrefer:1091,quadrant:[1074,1078],qualiti:43,queri:[40,41,871,904,914,1091,1172,1183,1184,1208,1219],query_dim:[1208,1219],query_kei:[40,41],queue:[40,41,42,871,880,881,945,1010,1018,1091],queue_class:[871,880,881,1091],queue_load_s:[40,41,42],queue_timeout:[40,41,42,945,1091],quick:[463,1191],quickli:[43,1233],radian:[827,832,844,1074,1075,1076,1078,1085],rai:[1074,1075],rais:[40,41,865,866,867,945,955,983,1016,1023,1025,1035,1091,1220,1221,1224,1228],ram:[871,910,917,920,1091],randint:[183,330,463,599,778,1147],random:[37,40,41,464,1148,1149,1150,1151,1152,1153,1191],random_crop:1057,random_norm:[183,330,463,599,778,1147],random_uniform:[183,330,463,599,778,1147],randomli:[463,1057,1061,1172,1180,1208,1216],rang:[463,945,948,998,999,1074,1078,1091,1191,1233,1237],rank:[849,855,865,866,867,945,962,1036,1039],rate:[1041,1044,1046,1048,1049,1050,1087,1088,1089,1090,1208,1219,1224,1225,1226,1227,1228,1229],rather:[40,41,43,871,915,945,948,995,1041,1047,1091],ratio:[871,1041,1048,1057,1062,1091,1224,1226],raw:[40,41,1064,1069],raw_delta:1091,reach:[43,871,893,897,903,1091,1135,1144],read:[40,41],readi:[1091,1233],real:[1074,1075,1077],realiti:1234,rearrang:[40,41,945,970,972],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1087,1089],receiv:[43,871,880,881,945,949,1000,1091,1208,1218],receivess:[871,1091],receivng:[1087,1090],recev:[1087,1088,1089],recognit:1237,recommend:[827,841,842,1191],rectifi:[1164,1166,1167],recurr:[1172,1182],recurrent_bia:[1172,1182],recurrent_kernel:[1172,1182],recurs:[40,41,1135,1136,1137,1143,1144],reduc:[40,41,858,859,865,866,867,871,915,945,971,1064,1069,1091,1154,1156,1157,1158,1159,1160,1161,1162],reduce_max:[40,41,190,335,465,604,785,1154],reduce_mean:[40,41,190,335,465,604,785,1154,1191,1233],reduce_min:[40,41,190,335,465,604,785,1154],reduce_prod:[40,41,190,335,465,604,785,1154],reduce_std:[40,41,335,1154],reduce_sum:[40,41,190,335,465,604,785,1091,1154],reduce_var:[40,41,190,335,465,604,785,1154],reduct:[39,40,41,415,440,441,865,866,867,945,971,1014,1015,1155,1156,1157,1158,1159,1160,1161,1162,1191],refactor:43,refer:[43,827,839,865,866,867,1041,1043,1044,1064,1070,1208,1218,1237],reflect:43,reflected_oper:[0,13,14],regard:[871,1091],regardless:[40,41,869,870],register_paramet:1233,reimplement:1237,rel:[849,850,856,857,861,862,1041,1044,1046,1048,1049,1050],rel_slice_obj:1091,relat:43,relev:[1224,1225,1226,1227,1228,1229],relu:[794,1164,1165,1166,1191,1233],remain:[43,945,1012,1135,1139],remaind:[40,41,945,977,1022],remov:[40,41,43,849,850,851,858,859,945,1023,1087,1088,1089],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,856,857],rep:[945,1029],repeat:[40,41,43,264,684,945,972,1029,1091,1234],repeated_config_check:[871,1091],repeatedli:[1135,1142],repetit:[40,41,945,1011,1029],replac:[40,41,43,463,464,945,958,1014,1015,1147,1148],repo:[43,1191],repositori:43,repres:[43,827,828,829,833,845,847,849,852,921,927,932,1172,1181],represent:[40,41,42,43,815,823,824,825,827,830,871,898,899,921,927,933,934,945,1021,1031,1091],reptil:[1087,1090],reptile_step:1087,request:[1191,1192],requir:[43,827,846,869,870,921,925,945,948,952,1197,1198],resampl:[945,997],reserv:43,reshap:[40,41,463,684,945],reshape_lik:[40,41],respect:[827,830,836,837,842,945,973,1041,1043,1044,1045,1046,1048,1049,1050,1064,1069,1074,1081,1087,1088,1089,1090],respond:43,respons:[43,1091],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,849,850,855,858,859,865,866,867,871,880,945,948,973,1014,1015,1026,1064,1067,1071,1072,1073,1074,1081,1091,1154,1156,1157,1158,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1191],ret:1091,ret_dict:1091,ret_fn:[871,880,881,1091],retain:[1041,1045],retain_grad:[447,448,1041,1045],retreiv:1091,retrn:[945,1021],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1087,1088,1089,1090],return_sequ:[1208,1217],return_st:[1208,1217],rev:[945,969],revers:[40,41,856,857,945,969,1034],review:43,right:[40,41,43],rk_e:1237,robot:1191,ronald:1191,root:[43,827,846],round:[264,415,684,827,831,846,945,948,1091],row:[945,988,1147,1148],rule:[945,948,1074,1081],run:[43,871,880,1041,1043,1044,1048,1087,1088,1089,1090,1091,1191,1192,1208,1219,1220,1221],safe:[871,880,1091],safety_factor:[871,1091],same:[15,16,17,40,41,43,816,818,820,821,827,831,849,850,853,856,857,858,859,861,862,871,880,881,915,916,921,925,945,946,961,976,977,980,981,1007,1013,1014,1015,1026,1040,1041,1047,1052,1074,1077,1087,1088,1089,1091,1154,1155,1172,1173,1174,1175,1176,1177,1178,1179,1191,1208,1209,1210,1211,1212,1213,1214,1215,1233,1237],same_arrai:[40,41],sampl:[945,997,1057,1058,1147,1148,1150,1151,1172,1180,1191,1208,1216],satisfi:[945,952,1064,1066,1070],save:[40,41,945,1019,1030,1057,1059,1220,1221],save_dir:[413,414,871,886,1091],save_weight:[1220,1221],scalar:[816,818,849,855,945,958,1007,1033,1037],scale:[871,913,914,1041,1049,1091,1172,1180,1183,1184,1189,1190,1208,1216,1219,1224,1227],scaled_dot_product_attent:1172,scatter:[945,1007,1014,1015],scatter_flat:[139,264,415,550,684,945],scatter_nd:[139,264,415,550,684,945],scene:[1041,1044,1046,1048,1049,1050],schemat:1191,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[858,859],second:[40,41,827,830,836,837,842,849,850,851,871,902,945,953,965,973,1010,1018,1028,1041,1043,1044,1048,1087,1089,1091,1224,1225,1226],secondli:1237,sector:[827,828,829],see:[59,365,413,414,463,827,830,836,842,849,855,865,866,867,871,883,884,885,886,921,945,948,998,999,1041,1074,1081,1191,1199,1201,1202,1204,1205,1207],seed:[40,41,183,463,778,1147],seed_valu:[40,41,463,1147,1152],seem:1191,seen_set:[945,986],select:[945,952,1023,1234,1237],self:[40,41,59,365,413,414,871,883,884,885,886,921,1041,1091,1191,1199,1201,1202,1204,1205,1207,1224,1228,1233,1237],sent:1091,seper:[43,945,978],seq:[40,41,42,1154,1155,1220,1221],sequenc:[15,16,17,40,41,42,43,463,869,870,871,880,881,890,891,892,893,894,895,896,897,900,901,915,921,925,945,948,952,954,956,961,962,988,1000,1003,1008,1011,1012,1015,1022,1026,1029,1034,1039,1041,1045,1057,1061,1062,1064,1067,1091,1135,1146,1147,1149,1151,1154,1156,1157,1158,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1189,1190,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1217,1220,1221,1222,1223,1224,1228,1230,1231],sequenti:1191,seri:43,set:[15,18,19,40,41,858,859,861,862,871,900,901,913,914,915,945,947,968,988,1016,1017,1018,1019,1041,1044,1046,1047,1048,1049,1050,1064,1067,1091,1135,1136,1143,1145,1146,1147,1148,1152,1154,1156,1157,1158,1159,1160,1161,1162,1191,1208,1217,1224,1225,1226,1227,1228,1229,1234,1237],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:871,set_default_dtyp:921,set_default_float_dtyp:921,set_default_int_dtyp:921,set_default_nod:1091,set_exception_debug_mod:44,set_framework:[40,41,43,59,1091,1191,1233,1234,1237],set_ivy_backend:[40,41],set_min_bas:945,set_min_denomin:945,set_nest_at_index:1135,set_nest_at_indic:1135,set_queue_timeout:945,set_split_factor:[871,1091],set_stat:[1224,1225,1226,1227,1228,1229],set_tmp_dir:945,set_with_grad:1041,setter:1091,sever:1237,sgd:[1191,1224],shape0:1091,shape:[40,41,43,358,359,361,364,415,427,441,463,684,816,817,818,819,820,821,822,849,850,851,856,857,858,859,861,862,871,883,921,925,945,946,956,961,962,975,976,977,979,981,985,988,1007,1008,1011,1012,1013,1014,1015,1021,1023,1026,1039,1040,1057,1061,1064,1066,1069,1074,1077,1078,1091,1147,1149,1150,1151,1154,1155,1172,1174,1176,1178,1208,1210,1211,1212,1213,1214,1215,1222,1223],shape_slic:[40,41],shape_to_tupl:945,share:[40,41,1191,1234],shift:1091,should:[40,41,42,43,463,816,821,827,828,829,830,831,832,833,834,835,836,838,840,841,842,844,845,846,847,849,850,851,855,858,859,869,870,871,945,956,957,963,1007,1012,1041,1044,1046,1048,1049,1050,1074,1081,1091,1154,1155,1191],show:[40,41,1191,1237],show_mod_in_top_mod:[1220,1221],show_structur:[1220,1221],show_sub_contain:[40,41],show_v:[1220,1221],show_v_in_top_v:[1220,1221],shown:[40,41],shp:1091,shuffl:[40,41,183,463,778,1147],shuffle_h5_fil:[40,41],side:43,sigmoid:[794,1164,1191,1233],sign:[849,852],signatur:[43,59,365,413,414,415,447,452,456,460,461,463,871,883,884,885,886,921,1041,1199,1201,1202,1204,1205,1207],signific:1237,similar:[43,1172,1183,1208,1219],similarli:[1064,1069],simpl:[43,945,974,1191,1234,1237],simpler:43,simplest:1234,simpli:[40,41,43,1191,1234,1237],simultan:1191,sin:[89,226,370,500,633,827,945,978,1074,1085,1234],sinco:1234,sine:[827,829,844,845,1074,1076],singl:[40,41,869,870,871,880,881,900,901,902,903,945,1023,1033,1037,1057,1062,1091,1147,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1191,1234,1237],singleton:[849,855,865,866,867],singular:[849,853],sinh:[89,226,370,500,633,827],siren:[1191,1199],situat:43,size:[40,41,42,415,440,849,850,853,858,859,865,866,867,871,894,895,896,897,913,914,915,945,948,956,998,999,1014,1022,1057,1061,1064,1067,1091,1147,1148,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1208,1209,1210],size_ordered_arrai:[40,41],skew:[1064,1070],skinv:1237,skip:[40,41],slice:[40,41,945,980,981,1091,1135,1142],slice_kei:[40,41],slice_obj:[40,41,1091],slice_via_kei:[40,41],slide:[1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],slodget:849,slogdet:[112,240,393,523,656],slope:[1164,1166],small:[1185,1186,1187,1188,1189,1190,1191,1222,1223,1234],smaller:[945,958],smallest:[40,41,823,824,825,827,831,945,951],smallest_norm:[365,823,824],softmax:[199,474,794,1164,1172,1183,1184],softplu:[794,1164],solut:43,solv:1237,some:[40,41,43,945,948,1041,1043,1044,1046,1048,1049,1050,1055,1172,1180,1191,1208,1216,1234,1237],some_backend:43,some_namespac:43,someth:[43,1237],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,849,853,862,1091],sort_by_kei:[40,41],sorting_funct:[861,862],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,358,359,360,361,362,363,364,365,367,368,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,866,867,869,870,871,873,874,875,876,877,878,880,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1235,1236,1237],space:[945,948,978,998,999],spars:[1185,1188],sparse_cross_entropi:1185,spawn:[945,1005],special:[43,827,828,829,831,832,833,838,840,844,845,846],specif:[40,41,43,827,841,842,871,913,945,963,970,971,972,1005,1087,1088,1089,1090,1091,1147,1153,1191,1220,1221,1233,1234],specifc:[1147,1148],specifi:[40,41,816,817,819,821,822,849,850,855,856,857,858,859,861,862,865,866,867,871,890,891,892,893,894,895,896,897,900,901,905,907,911,914,915,916,921,925,927,945,948,950,951,952,958,961,962,979,980,981,987,998,999,1026,1036,1039,1064,1067,1091,1135,1140,1141,1145,1146,1154,1155,1156,1157,1158,1159,1160,1161,1162],sphinx:43,split:[40,41,139,264,415,550,684,871,880,894,895,896,897,913,914,915,945,1000,1091],split_arg:1091,split_factor:[871,880,1091],split_func_cal:[871,1091],split_siz:1091,spread:[871,903,1091],sqrt:[89,226,370,500,633,827,849,855],squar:[827,846,849,852,945,988,1064,1066],squeez:[139,264,415,550,684,945],stabil:[861,862,945,1024,1025],stabl:[861,862,945,983,984,1016,1017,1024,1025],stable_divid:945,stable_pow:945,stack:[40,41,264,684,816,821,849,850,851,945,1057,1062,1135,1136,1143,1208,1217],stack_imag:[173,317,452,589,753,1057],stacked_dim_s:1091,stage:43,standard:[40,41,823,824,1147,1150,1154,1160,1189,1190,1191,1192,1222,1223],start:[40,41,43,413,414,415,416,437,438,463,871,886,945,948,998,999,1091,1191,1234],starting_index:[40,41],starting_split_factor:[871,1091],state:[1091,1172,1182,1191,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233],statement:1234,static_argnam:[415,420,869,870],static_argnum:[415,420,869,870],statistical_funct:[863,864],std:[463,1147,1150],step:[40,41,415,416,871,945,948,998,999,1041,1043,1044,1046,1048,1049,1050,1087,1088,1089,1090,1091,1191,1224,1225,1226,1227,1228,1229,1233,1237],stephen:1191,stick:1191,still:[40,41,43],stochast:[1224,1229],stop:[40,41,413,414,415,416,437,438,871,886,915,945,948,998,999,1041,1044,1046,1048,1049,1050,1052,1087,1088,1089,1090,1091,1224,1225,1226,1227,1228,1229],stop_gradi:[40,41,312,447,584,747,871,915,1041,1044,1046,1048,1049,1050,1087,1088,1089,1090,1091,1224,1225,1226,1227,1228,1229],stopiter:1091,store:[40,41,945,978,1022,1041,1055,1220,1221],store_var:[1220,1221],str:[15,16,17,40,41,42,43,358,359,360,361,362,364,365,367,368,816,818,820,823,824,825,869,870,871,880,881,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,915,921,926,927,932,933,934,935,936,937,944,945,952,968,970,971,972,1003,1005,1008,1014,1015,1064,1067,1069,1087,1088,1089,1090,1091,1135,1139,1154,1155,1197,1198,1208,1219,1220,1221],str_to_nod:1091,straight:1234,strength:[1191,1237],stride:[1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],string:[40,41,43,871,887,889,898,899,904,910,916,917,920,921,925,931,933,934,935,944,945,948,952,968,988,1008,1040,1091,1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215,1220,1221],structur:[40,41,42,43,945,963],structural_diff:[40,41],style:43,sub:[40,41,43,849,850,871,894,895,900,901,902,903,945,1022,1087,1088,1089,1090,1091],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1091,sub_mod:[1220,1221],sub_modul:[1230,1231],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1191,1192,1222,1223,1230,1231],subsequ:43,subset:43,substr:[40,41],suffici:[1064,1069],suggest:1191,suitabl:[1057,1062],sum:[40,41,415,440,441,849,854,855,871,900,901,902,903,915,945,967,971,1014,1015,1091,1154,1155,1161],summat:[40,41,1154,1155],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,120,122,125,127,129,130,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,178,179,180,184,185,186,187,188,189,191,192,193,194,195,196,197,200,202,203,205,206,207,208,209,210,211,216,217,218,219,220,222,223,224,227,228,229,230,231,232,233,234,235,236,237,238,241,242,243,244,245,247,249,252,255,256,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,318,319,320,322,323,324,325,327,328,331,332,333,334,336,337,338,339,340,341,342,343,346,348,349,350,351,352,353,354,359,360,361,362,363,364,366,367,368,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,394,395,396,397,398,399,401,403,406,408,410,411,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,450,451,453,454,455,457,458,459,462,464,466,467,468,469,470,471,472,475,476,478,479,480,481,482,483,484,489,490,491,492,493,494,496,497,498,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,524,525,526,527,528,529,531,533,536,538,540,541,544,545,546,547,548,549,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,585,586,587,588,590,591,592,594,595,596,600,601,602,603,605,606,607,608,609,610,611,615,616,617,622,623,624,625,626,627,629,630,631,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,657,658,659,660,661,662,664,666,669,671,673,674,677,678,679,680,681,682,683,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,748,749,750,751,752,754,755,756,758,759,760,761,762,763,765,766,768,769,770,771,772,773,774,775,776,777,779,780,781,782,783,784,786,787,788,789,790,791,792,795,796,797,798,799,800,801,803,804,806,807,808,809,810,811,812,817,818,819,820,821,822,824,825,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,857,859,862,864,866,867,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1190,1191,1195,1196,1198,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1236,1237],supports_inplac:945,suppos:1237,sure:43,svd:[112,240,393,523,656,849],swap:[40,41,945,1028],swapax:[40,41,550,684,945,1237],symmetr:[1064,1070],syntax:[413,415,447,452,456,460,461,463],tab:1191,take:[43,945,997],taken:[43,849,850,1154,1156,1157,1158,1160,1162],tan:[767,1074,1077],tangent:[827,847,1074,1077,1078,1079,1085,1086,1164,1171],tanh:[89,226,370,500,633,794,827,1074,1164],target:[40,41,871,887,890,891,892,893,894,895,896,897,900,901,902,903,916,1091,1191],target_dict:[40,41],task:[43,1087,1088,1089,1090],team:[43,1237],templat:1191,temporari:[945,1019,1030],tensor:[40,41,43,415,440,441,871,889,921,931,945,948,950,951,956,998,999,1002,1004,1007,1008,1012,1014,1015,1022,1040,1091,1147,1148,1149,1172,1180,1182,1191,1208,1216,1218,1224,1225,1226,1227,1228,1229,1233,1234],tensorflow:[43,1064,1069,1172,1174,1176,1178,1191,1208,1210,1212,1214,1234,1237],term:[40,41,43,1172,1182,1191,1208,1218],termcolor:[40,41,42],termin:[40,41,42,1091],test:[43,827,834,835,865,866,867,921,936,937],test_array_api:43,tf_concat:1191,than:[40,41,43,823,824,827,828,831,838,840,846,849,851,855,856,857,871,915,945,948,958,976,995,1002,1023,1026,1041,1047,1091,1147,1151,1191,1234],thei:[40,41,1074,1078,1087,1088,1089,1147,1148,1191,1230,1231,1234],them:[1191,1237],themselv:[1135,1136],therefor:43,thi:[40,41,42,43,827,841,842,849,852,854,858,859,871,893,897,903,910,915,920,945,948,978,1010,1012,1018,1041,1044,1046,1047,1048,1049,1050,1055,1064,1067,1091,1135,1139,1144,1154,1156,1157,1158,1159,1160,1161,1162,1172,1181,1191,1220,1221,1224,1225,1226,1227,1228,1229,1233,1234,1237],thing:[43,1191],those:[40,41,43,849,853,945,958,1041,1055,1091],though:43,thought:43,threshold:[945,1002,1004],through:[40,41,43],tick:43,tickbox:43,tile:[264,550,684,945],time:[43,945,1029,1041,1044,1048,1087,1088,1089,1090,1091,1147,1148,1172,1182,1208,1219,1220,1221,1237],timeout:[40,41,42,871,880,881,945,1010,1018,1091],timestep:[1172,1182,1208,1217],titl:[43,1191],tmp_dir:945,tmp_dr:[945,1019],to_appli:[40,41],to_clon:[871,1091],to_dev:[40,41,132,258,413,543,676,871],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[871,1091],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1191],to_ivy_modul:[201,802,1191,1197],to_json:[40,41],to_kv_fn:[1172,1183],to_kv_v:[1172,1183],to_list:[40,41,415,684,945],to_multi_dev:[40,41],to_mut:[1135,1137,1144],to_n:[15,40,41,1191],to_nod:1091,to_numpi:[40,41,415,684,945,1191,1233],to_out_fn:[1172,1183],to_out_v:[1172,1183],to_q_fn:[1172,1183],to_q_v:[1172,1183],to_raw:[40,41],to_scalar:[415,684,945],todo:[1091,1191,1192],togeth:[40,41,1230,1231],tool:[1191,1234],top_mod:[1220,1221],topic:1237,torch:[43,869,870,1191,1233,1234,1237],torch_concat:1191,torchfcmodel:1233,total:[40,41,42,871,917,1091],total_mem_on_dev:871,total_mem_on_nod:1091,tpu:[871,918,1091],tpu_is_avail:[413,543,676,871,1091],trace:[40,41,112,240,393,523,656,849,945,995],track:[43,871,1091,1135,1144,1220,1221],track_submod_call_ord:[1220,1221],track_submod_ret:[1220,1221],trail:[1222,1223],train:[1041,1043,1044,1048,1191,1192],trainabl:[1041,1047,1191,1192,1197,1198,1220,1221,1230],trainer:1191,tran:1237,transform:[1172,1180,1181],transpos:[40,41,139,264,415,684,871,902,945,1091,1172,1174,1176,1178,1208,1210,1212,1214],travers:[15,18,19,40,41,1135,1144],treat:[40,41,869,870],tri:[40,41],triangular:[816,821],trigonometr:[1074,1075,1077],tril:[77,215,358,488,621,816],trim_kei:[40,41],trust:[1041,1048,1224,1226],truth:[827,836,837,945,973,1071,1072,1073],try_else_non:945,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[871,1091],tune_dev_alloc:871,tune_dev_split:871,tune_node_alloc:1091,tune_node_split:1091,tune_step:[871,1091],tupl:[15,16,17,18,19,40,41,43,358,359,361,364,816,817,819,822,849,853,855,856,857,863,864,865,866,867,869,870,945,962,978,979,1021,1039,1091,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1149,1154,1156,1157,1158,1159,1160,1161,1162],tutori:43,two:[40,41,816,821,849,850,851,852,853,854,945,948,953,965,1001,1028,1064,1067],type:[15,18,40,41,42,43,59,367,368,413,414,816,817,818,819,820,821,822,824,825,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,844,845,846,847,849,850,851,855,856,857,861,862,865,866,867,871,883,884,885,886,898,899,903,915,921,925,926,927,931,932,933,934,935,936,937,944,945,946,948,952,961,963,973,976,977,979,988,995,1007,1008,1013,1027,1037,1040,1041,1047,1052,1074,1081,1091,1191,1199,1201,1202,1204,1205,1207,1220,1221,1234],types_to_iteratively_nest:[40,41,42],uint8:[1057,1059,1063],uint8_img_to_float_img:1057,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[827,830],underwai:43,unecessari:43,unfairli:43,unif:1091,unifi:[40,41,871,900,901,902,903,915,1091,1191],uniform:[40,41,1147,1148,1150,1151,1199,1201,1202,1205,1206],uniformli:[1147,1149,1151],unify_arrai:1091,unify_it:1091,unify_nest:1091,uniniti:[816,817],union:[15,18,19,40,41,43,358,359,360,361,362,364,365,367,368,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,851,852,853,855,856,857,858,859,861,862,863,864,865,866,867,869,870,871,889,894,895,896,897,915,916,921,925,926,927,931,932,933,934,935,936,937,944,945,946,947,948,950,951,952,953,954,956,958,959,960,961,962,964,965,966,967,970,971,972,973,975,976,977,978,979,980,981,985,987,988,989,996,997,998,999,1001,1002,1003,1004,1007,1008,1011,1012,1013,1014,1015,1020,1021,1022,1023,1026,1028,1029,1031,1032,1033,1034,1036,1037,1038,1039,1040,1091,1135,1136,1137,1143,1144],uniqu:[871,880,881,1087,1088,1089,1090,1091,1135,1139],unique_kwarg:1091,unit:[43,871,1074,1075,1076,1091,1164,1165,1166,1167],unitari:[849,853],unless:[945,1007,1040],unlik:[871,1091],unnorm:[1147,1148],unpack:[945,1036],unrol:[1172,1182],unset:1234,unset_debug_mod:44,unset_default_devic:871,unset_default_dtyp:921,unset_default_float_dtyp:921,unset_default_int_dtyp:921,unset_framework:[59,1234],unset_with_grad:1041,unstack:[40,41,139,264,415,550,684,945],until:43,unus:[869,870],updat:[40,41,415,440,441,871,880,945,993,1014,1015,1041,1043,1044,1046,1048,1049,1050,1087,1088,1089,1091,1135,1140,1141,1145,1146,1172,1182,1191,1192,1197,1198,1224,1225,1226,1227,1228,1229,1234,1237],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1147,1151],upper_depth:[1220,1221],upstream:43,usabl:[1191,1237],usag:[871,915,1091],use:[40,41,42,43,463,871,880,881,906,918,945,1011,1024,1025,1064,1069,1091,1172,1183,1189,1190,1191,1222,1223,1234,1237],used:[40,41,43,463,849,850,871,880,910,913,914,920,921,932,945,983,984,1000,1014,1015,1016,1017,1040,1041,1048,1049,1064,1067,1087,1088,1089,1090,1091,1135,1144,1208,1219,1224,1226,1227,1233,1234],used_dev:[871,880],used_mem_on_dev:871,used_mem_on_nod:1091,used_node_str:1091,used_node_strs_dict:1091,useful:[40,41,871,915,1091,1172,1181,1191,1234],user:[1191,1208,1219,1220,1221,1234,1237],uses:1191,using:[40,41,43,1041,1043,1044,1135,1138,1142,1154,1155,1172,1180,1184,1191,1208,1216,1233,1234,1237],util:[871,904,1091],utility_funct:[865,866,867],v_with_top_v_key_chain:[1220,1221],val:[40,41,415,432,433,434,945,991,992,993,1016,1017],valid:[865,866,867,921,926,945,1024,1025,1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],valid_dtyp:921,valu:[40,41,415,816,818,827,831,836,837,849,852,853,854,855,858,859,861,862,863,864,871,883,914,915,945,946,948,950,951,958,959,960,962,963,969,973,978,979,980,981,996,998,999,1002,1004,1010,1011,1012,1013,1014,1015,1016,1017,1018,1034,1037,1038,1039,1041,1045,1048,1057,1063,1071,1072,1073,1074,1082,1083,1084,1087,1088,1089,1091,1135,1139,1140,1141,1145,1146,1147,1150,1151,1154,1156,1158,1172,1183,1184,1189,1190,1208,1219,1222,1223,1224,1226],value_is_nan:945,vanilla:[1087,1089],var_shap:1199,variabl:[15,16,17,18,19,40,41,312,447,584,747,945,955,991,992,993,994,995,1027,1041,1044,1045,1046,1047,1048,1049,1050,1052,1055,1087,1088,1089,1090,1172,1183,1189,1190,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],variable_data:[447,747,1041],varianc:[40,41,1154,1162,1237],varieti:1234,variou:[43,1191],vector:[40,41,456,459,849,851,853,855,945,960,965,1064,1070,1172,1181,1208,1218],vector_norm:[40,41,112,240,393,523,656,849],vector_to_skew_symmetric_matrix:[177,321,456,593,757,1064],verbos:1236,veri:[43,1191],verifi:43,via:[1135,1136,1143,1234],view:[1057,1062],vision:1191,visual:1234,volum:[1172,1177],vw_tm1:[1041,1044,1048],wai:[1234,1237],wait:[40,41,42,43],want:[43,1191,1234,1237],warn:[59,66,67,68,69,70],warp:[452,453,1057,1058],watch:1233,websit:43,weight:[1041,1043,1044,1046,1048,1049,1050,1172,1181,1182,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1220,1221,1224,1226,1227],weight_initi:[1208,1209,1210,1211,1212,1213,1214,1215,1217,1218],weights_path:[1220,1221],well:[40,41,945,987],were:[40,41,1091],what:[43,1191],when:[40,41,42,43,849,853,871,945,957,1025,1038,1091,1191,1220,1221,1234,1237],where:[40,41,43,264,415,684,816,818,827,839,849,853,865,866,867,945,948,956,958,962,975,989,996,1007,1039,1135,1136,1143,1147,1148],wherea:43,wherebi:[1135,1144],whether:[15,18,19,40,41,42,827,835,865,866,867,869,870,871,889,902,906,910,915,918,920,921,931,935,936,937,944,945,947,953,954,966,969,974,978,985,987,990,994,995,1000,1020,1027,1036,1037,1041,1044,1045,1046,1047,1048,1049,1050,1052,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1164,1165,1172,1180,1191,1197,1198,1208,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],which:[40,41,42,43,463,816,817,818,819,820,821,822,823,824,825,849,850,855,856,857,858,859,861,862,863,864,865,866,867,869,870,871,880,881,889,894,895,896,897,900,901,902,903,905,907,911,913,914,915,921,926,931,935,944,945,948,952,961,963,965,966,967,969,979,980,981,982,988,989,997,998,999,1006,1007,1008,1009,1011,1014,1015,1022,1026,1036,1038,1040,1041,1044,1045,1046,1048,1049,1050,1052,1054,1055,1057,1059,1064,1067,1074,1078,1091,1135,1139,1140,1141,1145,1146,1147,1148,1149,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1183,1184,1191,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1233,1234],whilst:43,whitespac:[40,41,42],who:43,whose:[816,821,827,828,829,832,833,844,845,847,849,850,856,857,945,952,957,1154,1155,1156,1157,1158,1160,1162],why:[1191,1192],width:[1057,1062],wiki:1237,wikipedia:1237,window:[1057,1062,1172,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1211,1212,1213,1214,1215],wise:[40,41,827,830,836,837,841,842,945,958,973,976,977,1002,1004,1013,1041,1044,1046,1048,1050,1071,1072,1073,1074,1075,1076,1077,1078,1081,1082,1083,1084,1085,1164,1165,1166,1167,1168,1169,1170,1171],wish:1234,with_bia:[1208,1218],with_cal:[945,969],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1041,1051],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1091,with_partial_v:[1220,1221],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,415,442,945,1022,1091],with_to_kv_fn:[1208,1219],with_to_out_fn:[1208,1219],with_to_q_fn:[1208,1219],within:[15,18,19,43,849,853,945,948,1147,1151],without:[40,41,43,945,1010,1012,1018,1135,1137,1234],wonder:1191,word:[15,16,17,945,948,1147,1151,1197,1198],work:[43,1233],worker:[871,880,881,1091],worker_class:[871,880,881,1091],worker_kwarg:1091,would:[43,1164,1169,1191,1234,1237],wrap:[15,40,41,42,43,413,415,447,452,456,460,461,463,945,957,1041,1055,1191],write:[40,41,43,1191,1192,1237],written:[43,1191,1237],ws_new:[1041,1044,1046,1048,1049,1050],x1_i:[827,830,836,837,842,945,973,1074,1081],x2_i:[827,830,836,837,842,945,973,1074,1081],x_feat_dim:[1172,1183],x_i:[827,828,829,831,832,833,834,835,838,840,841,844,845,846,847],x_in:[1191,1233],x_inv:[1064,1066],x_max:[415,945,958],x_min:[415,945,958],x_sub:1091,xkk:1237,xkkm1:1237,xkm1km1:1237,xs0:1091,xs_t:1091,year:[1191,1237],yet:[1135,1144,1237],yield:[945,1038],you:[43,1191,1233,1234,1237],your:[1191,1192,1233,1234,1237],your_awesome_project:1234,yourself:[43,1191],yourslef:43,youtub:43,zero:[40,41,77,215,358,488,621,816,817,821,827,841,842,849,851,855,865,866,867,945,962,1007,1014,1015,1039,1040,1041,1043,1044,1048,1049,1172,1180,1191,1199,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1224,1225,1226,1227],zero_pad:[264,415,550,684,945],zeros_lik:[139,264,415,550,684,945],zip:1091,zk_e:1237},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","full_like","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","full_like","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","full_like","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","full_like","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","full_like","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":969,"function":[77,84,89,111,119,121,123,124,126,128,215,221,226,239,246,248,250,251,253,254,358,365,370,392,400,402,404,405,407,409,488,495,500,522,530,532,534,535,537,539,621,628,633,655,663,665,667,668,670,672,816,823,827,848,856,858,860,861,863,865],Ones:1204,Using:1234,abs:[265,551,685,946],aco:[768,1075],acosh:[90,227,371,501,634,828],activ:[199,345,474,613,794,1164,1194],adam:1225,adam_step:1043,adam_upd:1044,algebra:[112,177,240,321,393,456,523,593,656,757,849],all:[129,255,410,540,673,866],all_equ:947,all_nested_indic:1136,ani:[130,256,411,541,674,867],api:[0,43,75,213,356,486,619,814],arang:[140,266,416,552,686,948],arg_nam:949,argmax:[122,249,403,533,666,859,950],argmin:[141,417,553,687,951],args_to_ivi:16,args_to_n:17,argsort:[125,252,406,536,669,862],arithmet:1,arrai:[0,3,43,75,142,213,267,356,418,486,554,619,688,814,952],array_equ:[268,689,953],arrays_equ:954,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[769,1076],asinh:[91,372,502,635,829],assert_supports_inplac:955,atan2:[771,1078],atan:[770,1077],atanh:[772,1079],attribut:5,backend:[43,73],bilinear_resampl:[174,318,453,590,754,1058],binary_cross_entropi:1186,bitwis:7,bitwise_and:[92,228,373,503,636,830],broadcast_to:[269,690,956],builder:51,cache_fn:957,cast:[143,270,419,555,691,925],ceil:[93,229,374,504,637,831],choleski:[758,1065],choose_random_framework:61,citat:1191,clear_framework_stack:62,clear_mem_on_dev:[678,887],clip:[271,692,958],clip_matrix_norm:959,clip_vector_norm:960,clone:1106,clone_arrai:1107,clone_it:1108,clone_nest:1109,clonedit:1093,cloneditem:1092,clonednest:1094,closest_valid_dtyp:926,code:1237,comparison:9,compil:[272,420,693,869,870],concaten:[144,273,421,556,694,961],constant:[76,214,357,487,620,815],constant_pad:[274,557,695,962],contain:[40,41],container_typ:[696,963],content:1191,contribut:43,conv1d:[205,348,478,806,1173,1209],conv1d_transpos:[206,349,479,807,1174],conv1dtranspos:1210,conv2d:[207,350,480,615,808,1175,1211],conv2d_transpos:[208,351,481,809,1176],conv2dtranspos:1212,conv3d:[209,352,482,616,810,1177,1213],conv3d_transpos:[210,353,483,811,1178],conv3dtranspos:1214,convers:15,convert:[201,802,1197],convert_dtyp:927,copy_arrai:[697,964],copy_nest:1137,core:[131,257,412,542,675,868],cos:[94,375,505,638,832],cosh:[95,376,506,639,773,833,1080],cprint:1236,creat:43,creation:[77,215,358,488,621,816],cross:[275,698,965],cross_entropi:1187,cumprod:[145,276,422,699,966],cumsum:[700,967],current_framework:63,current_framework_str:[701,968],data:[84,88,221,225,365,369,495,499,628,632,823,826],debug_mod:45,debugg:44,default_devic:888,default_dtyp:928,default_float_dtyp:929,default_int_dtyp:930,default_nod:1110,depthwise_conv2d:[211,354,484,617,812,1179],depthwiseconv2d:1215,design:43,dev:[134,260,545,679,889],dev_clon:890,dev_clone_arrai:891,dev_clone_it:892,dev_clone_nest:893,dev_dist:894,dev_dist_arrai:895,dev_dist_it:896,dev_dist_nest:897,dev_from_str:[135,261,546,680,898],dev_to_str:[136,262,547,681,899],dev_unifi:900,dev_unify_arrai:901,dev_unify_it:902,dev_unify_nest:903,dev_util:904,devclonedit:874,devcloneditem:873,devclonednest:875,devdistit:877,devdistitem:876,devdistnest:878,devic:[20,132,258,413,543,676,871],devmapp:880,devmappermultiproc:881,diagon:[113,241,394,524,657,850],distribute_nest:1111,divid:1081,document:1191,dropout:[1180,1216],dtype:[146,277,423,558,702,921,931],dtype_bit:[147,278,424,559,703,932],dtype_from_str:[148,279,425,560,704,933],dtype_to_str:[149,280,426,561,705,934],ecosystem:52,einops_rearrang:970,einops_reduc:971,einops_repeat:972,einsum:[191,336,466,605,786,1155],elementwis:[89,226,370,500,633,827],empti:[78,216,359,489,622,817],equal:[96,377,507,640,973],erf:[462,774,1082],execute_with_gradi:[171,313,448,585,748,1045],exist:974,exp:[775,1083],expand_dim:[281,706,975],finfo:[86,223,367,497,630,824],firstlayersiren:1201,flip:[120,247,401,531,664,857],float_img_to_uint8_img:1059,floor:[282,707,976],floormod:[283,708,977],fomaml_step:1088,fork:43,fourier_encod:978,framework:59,full:[150,284,427,562,709,979],full_lik:[79,360,490,623,818],func:72,gather:[151,285,428,563,710,980],gather_nd:[152,286,429,564,711,981],geglu:1195,gelu:[346,475,795,1165,1196],gener:[22,139,264,415,550,684,945],get_all_arrays_in_memori:982,get_all_arrays_on_dev:905,get_framework:64,get_min_bas:983,get_min_denomin:984,get_num_dim:[712,985],get_referrers_recurs:986,glorotuniform:1202,gpu_is_avail:[906,1112],gradient:[24,170,312,447,584,747,1041],gradient_descent_upd:1046,gradient_imag:[175,319,454,591,755,1060],gym:53,handler:59,has_nan:987,ident:[153,287,430,565,713,988],iinfo:[87,224,368,498,631,825],imag:[26,173,317,452,589,753,1057],index_nest:1138,indices_wher:[154,288,431,714,989],initi:1199,inplac:11,inplace_arrays_support:990,inplace_decr:[155,289,432,566,715,991],inplace_incr:[156,290,433,567,716,992],inplace_upd:[157,291,434,568,717,993],inplace_variables_support:994,inv:[759,1066],invalid_dtyp:935,is_arrai:[158,292,435,569,718,995],is_float_dtyp:936,is_int_dtyp:937,is_vari:[172,314,449,586,749,1047],isfinit:[97,230,378,508,641,834],isinf:[293,570,719,996],isnan:[98,231,379,509,642,835],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,813,1233,1234,1237],ivymodul:[202,803],jax:74,keep:43,lamb:1226,lamb_upd:1048,lar:1227,lars_upd:1049,layer:[204,347,477,614,805,1172,1208],layer_norm:1190,layernorm:1223,leaky_relu:[796,1166],less:[99,232,380,510,643,836],less_equ:[100,381,511,644,837],linalg:[28,1064],linear:[112,177,240,321,393,456,523,593,656,757,849,1181,1218],linear_resampl:[159,294,436,571,720,997],linspac:[160,295,437,572,721,998],list:43,log10:[101,382,512,645,838],log1p:[102,383,513,646,839],log2:[103,384,514,647,840],log:[776,1084],logic:[30,181,326,460,597,764,1071],logical_and:[327,765,1072],logical_not:[104,233,385,515,648,841],logical_or:[105,328,386,516,649,766,842,1073],logspac:[161,296,438,573,722,999],loss:1185,lstm:1217,lstm_updat:1182,maml_step:1089,manipul:[119,246,400,530,663,856],map:1139,map_nest_at_index:1140,map_nest_at_indic:1141,match_kwarg:1000,math:[32,182,329,461,598,767,1074],matmul:[114,297,395,525,658,851,1001],matrix_norm:[178,322,457,594,760,1067],maximum:[723,1002],mech:54,memori:55,meshgrid:[298,724,1003],meta:[34,1087],method:[111,239,392,522,655,848],min:[127,408,538,671,864],minimum:[725,1004],model:56,modul:[1220,1221,1233],multi:1091,multi_head_attent:1183,multi_index_nest:1142,multidevcontain:42,multidevit:884,multidevitem:883,multidevnest:885,multiheadattent:1219,multinodeit:1097,multinodeitem:1096,multinodenest:1098,multinomi:[184,331,464,600,779,1148],multiprocess:[726,1005],mxnet:212,nativ:1233,neg:[106,234,387,517,650,843],nest:1135,nested_indices_wher:1143,nested_map:1144,network:1233,next:1191,node:[1091,1113],node_dist:1114,node_dist_arrai:1115,node_dist_it:1116,node_str:1117,node_to_str:1118,node_util:1119,nodedistit:1100,nodedistitem:1099,nodedistnest:1101,nodemapp:1103,nodemappermultiproc:1104,norm:[1189,1222],num_arrays_in_memori:1006,num_arrays_on_dev:907,num_cpu_cor:908,num_gpu:[137,909,1120],numpi:355,nutshel:1191,one_hot:[162,439,574,727,1007],ones:[80,217,361,491,624,819,1008],ones_lik:[81,218,362,492,625,820],oper:[1,3,7,9,11,13],optim:[1224,1228],optimizer_upd:1050,overview:1191,percent_used_mem_on_dev:910,percent_used_mem_on_nod:1121,pinv:[323,761,1068],portabl:1237,print_all_arrays_in_memori:1009,print_all_arrays_on_dev:911,profil:[133,259,414,544,677,886,1105],pull:43,queue_timeout:1010,randint:[185,332,601,780,1149],random:[36,183,330,463,599,778,1147],random_crop:1061,random_norm:[186,333,602,781,1150],random_uniform:[187,334,603,782,1151],reduce_max:[192,337,467,606,787,1156],reduce_mean:[193,338,468,607,788,1157],reduce_min:[194,339,469,608,789,1158],reduce_prod:[195,340,470,609,790,1159],reduce_std:[341,1160],reduce_sum:[196,342,471,610,791,1161],reduce_var:[197,343,472,611,792,1162],reduct:[38,190,335,465,604,785,1154],reflect:13,relu:[797,1167],repeat:[299,728,1011],reptile_step:1090,request:43,reshap:[729,1012],robot:57,round:[300,730,1013],run:1234,scaled_dot_product_attent:1184,scatter_flat:[163,301,440,575,731,1014],scatter_nd:[164,302,441,576,732,1015],search:[121,248,402,532,665,858],seed:[188,783,1152],sequenti:[1230,1231],set:[123,250,404,534,667,860],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:912,set_default_dtyp:938,set_default_float_dtyp:939,set_default_int_dtyp:940,set_default_nod:1122,set_exception_debug_mod:48,set_framework:65,set_min_bas:1016,set_min_denomin:1017,set_nest_at_index:1145,set_nest_at_indic:1146,set_queue_timeout:1018,set_split_factor:[913,1123],set_tmp_dir:1019,set_with_grad:1051,sgd:1229,shape:[733,1020],shape_to_tupl:1021,shuffl:[189,784,1153],sigmoid:[798,1168],signatur:[111,239,392,522,655,848],sin:[107,235,388,518,651,844],sinh:[108,236,389,519,652,845],siren:1205,slodget:852,slogdet:[115,242,396,526,659],softmax:[200,476,799,1169],softplu:[800,1170],sort:[124,251,405,535,668,861],sparse_cross_entropi:1188,split:[165,303,442,577,734,1022],split_factor:[914,1124],split_func_cal:[915,1125],sqrt:[109,237,390,520,653,846],squeez:[166,304,443,578,735,1023],stable_divid:1024,stable_pow:1025,stack:[305,736,1026],stack_imag:[176,320,455,592,756,1062],standard:43,statist:[126,253,407,537,670,863],stop_gradi:[315,450,587,750,1052],str_to_nod:1126,submodul:43,supports_inplac:1027,svd:[116,243,397,527,660,853],swapax:[579,737,1028],tan:[777,1085],tanh:[110,238,391,521,654,801,847,1086,1171],tensorflow:485,tile:[306,580,738,1029],tmp_dir:1030,to_dev:[138,263,548,682,916],to_ivi:18,to_ivy_modul:[203,804,1198],to_list:[739,1031],to_n:19,to_nod:1127,to_numpi:[740,1032],to_scalar:[741,1033],todo:43,torch:618,total_mem_on_dev:917,total_mem_on_nod:1128,tpu_is_avail:[549,683,918,1129],trace:[117,244,398,528,661,854],train:1233,trainabl:1233,transpos:[167,307,444,742,1034],tree:1191,tril:[82,219,363,493,626,821],try_else_non:1035,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[84,88,221,225,365,369,495,499,628,632,823,826],uint8_img_to_float_img:1063,unifi:1130,unify_arrai:1131,unify_it:1132,unify_nest:1133,unset_debug_mod:49,unset_default_devic:919,unset_default_dtyp:941,unset_default_float_dtyp:942,unset_default_int_dtyp:943,unset_framework:71,unset_with_grad:1053,unstack:[168,308,445,581,743,1036],updat:43,used_mem_on_dev:920,used_mem_on_nod:1134,util:[128,254,409,539,672,865],valid_dtyp:944,value_is_nan:1037,variabl:[316,451,588,751,1054],variable_data:[752,1055],vector_norm:[118,245,399,529,662,855],vector_to_skew_symmetric_matrix:[180,325,459,596,763,1070],verbos:1235,vision:58,where:[309,744,1038,1191],why:1237,with_grad:1056,wrapper:72,write:1234,your:43,zero:[83,220,364,494,627,822,1207],zero_pad:[310,582,745,1039],zeros_lik:[169,311,446,583,746,1040]}})